{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { AuthService } from \"@shared/services/auth.service\";\nimport { notification } from \"antd\";\nimport { storage } from \"@shared/utils\";\nimport { useMutation } from \"react-query\";\nimport { useNavigate } from \"react-router-dom\";\nexport const useAuth = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const loginFn = useMutation({\n    mutationFn: AuthService.login,\n    onSuccess: val => {\n      var _val$data, _val$data$payload;\n\n      storage.setToken(val === null || val === void 0 ? void 0 : (_val$data = val.data) === null || _val$data === void 0 ? void 0 : (_val$data$payload = _val$data.payload) === null || _val$data$payload === void 0 ? void 0 : _val$data$payload.token);\n      notification.success({\n        message: \"Auth Login Success\"\n      });\n      navigation(\"/\");\n    }\n  });\n\n  const logoutFn = () => {\n    storage.clear();\n    window.location.assign(window.location.origin);\n  };\n\n  const loadUserFn = () => {};\n\n  const isAuthenticated = storage.getToken() ? true : false;\n  return {\n    loginFn,\n    logoutFn,\n    loadUserFn,\n    isAuthenticated\n  };\n};\n\n_s(useAuth, \"TXb7Hv3/lYpo9vFXtRlolfOSSbc=\", false, function () {\n  return [useNavigate, useMutation];\n});","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/auth/hooks/useAuth.ts"],"names":["AuthService","notification","storage","useMutation","useNavigate","useAuth","navigation","loginFn","mutationFn","login","onSuccess","val","setToken","data","payload","token","success","message","logoutFn","clear","window","location","assign","origin","loadUserFn","isAuthenticated","getToken"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,+BAA5B;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC5B,QAAMC,UAAU,GAAGF,WAAW,EAA9B;AACA,QAAMG,OAAO,GAAGJ,WAAW,CAAC;AAC3BK,IAAAA,UAAU,EAAER,WAAW,CAACS,KADG;AAE3BC,IAAAA,SAAS,EAAGC,GAAD,IAAS;AAAA;;AACnBT,MAAAA,OAAO,CAACU,QAAR,CAAiBD,GAAjB,aAAiBA,GAAjB,oCAAiBA,GAAG,CAAEE,IAAtB,mEAAiB,UAAWC,OAA5B,sDAAiB,kBAAoBC,KAArC;AACAd,MAAAA,YAAY,CAACe,OAAb,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACAX,MAAAA,UAAU,CAAC,GAAD,CAAV;AACA;AAN0B,GAAD,CAA3B;;AAQA,QAAMY,QAAQ,GAAG,MAAM;AACtBhB,IAAAA,OAAO,CAACiB,KAAR;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBF,MAAM,CAACC,QAAP,CAAgBE,MAAvC;AACA,GAHD;;AAIA,QAAMC,UAAU,GAAG,MAAM,CAAE,CAA3B;;AACA,QAAMC,eAAe,GAAGvB,OAAO,CAACwB,QAAR,KAAqB,IAArB,GAA4B,KAApD;AACA,SAAO;AACNnB,IAAAA,OADM;AAENW,IAAAA,QAFM;AAGNM,IAAAA,UAHM;AAINC,IAAAA;AAJM,GAAP;AAMA,CAtBM;;GAAMpB,O;UACOD,W,EACHD,W","sourcesContent":["import { AuthService } from \"@shared/services/auth.service\"\nimport { notification } from \"antd\"\nimport { storage } from \"@shared/utils\"\nimport { useMutation } from \"react-query\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport const useAuth = () => {\n\tconst navigation = useNavigate()\n\tconst loginFn = useMutation({\n\t\tmutationFn: AuthService.login,\n\t\tonSuccess: (val) => {\n\t\t\tstorage.setToken(val?.data?.payload?.token)\n\t\t\tnotification.success({ message: \"Auth Login Success\" })\n\t\t\tnavigation(\"/\")\n\t\t},\n\t})\n\tconst logoutFn = () => {\n\t\tstorage.clear()\n\t\twindow.location.assign(window.location.origin as unknown as string)\n\t}\n\tconst loadUserFn = () => {}\n\tconst isAuthenticated = storage.getToken() ? true : false\n\treturn {\n\t\tloginFn,\n\t\tlogoutFn,\n\t\tloadUserFn,\n\t\tisAuthenticated,\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}