{"ast":null,"code":"import { concatFilterQuery } from \"@shared/utils\";\nexport class BaseService {\n  constructor(http) {\n    this.http = http;\n    this.END_POINT = void 0;\n    this.httpClient = void 0;\n    this.httpClient = http;\n  }\n\n  filter(options) {\n    return this.httpClient.get(`${this.END_POINT}?${concatFilterQuery(options)}`);\n  }\n\n  getById(id) {\n    return this.httpClient.get(this.END_POINT + id);\n  }\n\n  create(payload) {\n    return this.httpClient.post(this.END_POINT, payload);\n  }\n\n  update(id, payload) {\n    return this.httpClient.put(this.END_POINT + id, payload);\n  }\n\n  delete(id) {\n    return this.httpClient.delete(this.END_POINT + id);\n  }\n\n}","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@shared/base/base.service.ts"],"names":["concatFilterQuery","BaseService","constructor","http","END_POINT","httpClient","filter","options","get","getById","id","create","payload","post","update","put","delete"],"mappings":"AACA,SAASA,iBAAT,QAAkC,eAAlC;AAEA,OAAO,MAAMC,WAAN,CAA2C;AAIjDC,EAAAA,WAAW,CAASC,IAAT,EAAoB;AAAA,SAAXA,IAAW,GAAXA,IAAW;AAAA,SAH/BC,SAG+B;AAAA,SAF/BC,UAE+B;AAC9B,SAAKA,UAAL,GAAkBF,IAAlB;AACA;;AACDG,EAAAA,MAAM,CAACC,OAAD,EAAuB;AAC5B,WAAO,KAAKF,UAAL,CAAgBG,GAAhB,CACL,GAAE,KAAKJ,SAAU,IAAGJ,iBAAiB,CAACO,OAAD,CAAU,EAD1C,CAAP;AAGA;;AACDE,EAAAA,OAAO,CAACC,EAAD,EAAa;AACnB,WAAO,KAAKL,UAAL,CAAgBG,GAAhB,CAAoB,KAAKJ,SAAL,GAAiBM,EAArC,CAAP;AACA;;AAEDC,EAAAA,MAAM,CAACC,OAAD,EAAsB;AAC3B,WAAO,KAAKP,UAAL,CAAgBQ,IAAhB,CAAqB,KAAKT,SAA1B,EAAqCQ,OAArC,CAAP;AACA;;AAEDE,EAAAA,MAAM,CAACJ,EAAD,EAAaE,OAAb,EAAmC;AACxC,WAAO,KAAKP,UAAL,CAAgBU,GAAhB,CAAoB,KAAKX,SAAL,GAAiBM,EAArC,EAAyCE,OAAzC,CAAP;AACA;;AAEDI,EAAAA,MAAM,CAACN,EAAD,EAAa;AAClB,WAAO,KAAKL,UAAL,CAAgBW,MAAhB,CAAuB,KAAKZ,SAAL,GAAiBM,EAAxC,CAAP;AACA;;AA1BgD","sourcesContent":["import { IBaseFilter } from \"@shared/interfaces\"\nimport { concatFilterQuery } from \"@shared/utils\"\n\nexport class BaseService<ICreatUser, IUpdateUser> {\n\tEND_POINT: string | undefined\n\thttpClient: any\n\n\tconstructor(private http: any) {\n\t\tthis.httpClient = http\n\t}\n\tfilter(options: IBaseFilter) {\n\t\treturn this.httpClient.get(\n\t\t\t`${this.END_POINT}?${concatFilterQuery(options)}`\n\t\t)\n\t}\n\tgetById(id: string) {\n\t\treturn this.httpClient.get(this.END_POINT + id)\n\t}\n\n\tcreate(payload: ICreatUser) {\n\t\treturn this.httpClient.post(this.END_POINT, payload)\n\t}\n\n\tupdate(id: string, payload: IUpdateUser) {\n\t\treturn this.httpClient.put(this.END_POINT + id, payload)\n\t}\n\n\tdelete(id: string) {\n\t\treturn this.httpClient.delete(this.END_POINT + id)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}