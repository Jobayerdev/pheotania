{"ast":null,"code":"import { QueryClient } from \"react-query\";\nimport { notification } from \"antd\";\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      useErrorBoundary: true,\n      refetchOnWindowFocus: false,\n      retry: false,\n      onSuccess: data => {\n        var _data$data, _data$config;\n\n        if (data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.success) {\n          switch (data === null || data === void 0 ? void 0 : (_data$config = data.config) === null || _data$config === void 0 ? void 0 : _data$config.method.toUpperCase()) {\n            case \"POST\":\n              return notification.success({\n                message: \"Created Success\"\n              });\n\n            case \"PUT\":\n              return notification.success({\n                message: \"Created Success\"\n              });\n\n            case \"DELETE\":\n              return notification.success({\n                message: \"Created Success\"\n              });\n          }\n        }\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@shared/config/react-query/react-query.ts"],"names":["QueryClient","notification","queryClient","defaultOptions","queries","useErrorBoundary","refetchOnWindowFocus","retry","onSuccess","data","success","config","method","toUpperCase","message"],"mappings":"AAAA,SAASA,WAAT,QAAiE,aAAjE;AAIA,SAASC,YAAT,QAA6B,MAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,IAAIF,WAAJ,CAAgB;AAC1CG,EAAAA,cAAc,EAAE;AACfC,IAAAA,OAAO,EAAE;AACRC,MAAAA,gBAAgB,EAAE,IADV;AAERC,MAAAA,oBAAoB,EAAE,KAFd;AAGRC,MAAAA,KAAK,EAAE,KAHC;AAIRC,MAAAA,SAAS,EAAGC,IAAD,IAAe;AAAA;;AACzB,YAAIA,IAAJ,aAAIA,IAAJ,qCAAIA,IAAI,CAAEA,IAAV,+CAAI,WAAYC,OAAhB,EAAyB;AACxB,kBAAQD,IAAR,aAAQA,IAAR,uCAAQA,IAAI,CAAEE,MAAd,iDAAQ,aAAcC,MAAd,CAAqBC,WAArB,EAAR;AACC,iBAAK,MAAL;AACC,qBAAOZ,YAAY,CAACS,OAAb,CAAqB;AAC3BI,gBAAAA,OAAO,EAAE;AADkB,eAArB,CAAP;;AAGD,iBAAK,KAAL;AACC,qBAAOb,YAAY,CAACS,OAAb,CAAqB;AAC3BI,gBAAAA,OAAO,EAAE;AADkB,eAArB,CAAP;;AAGD,iBAAK,QAAL;AACC,qBAAOb,YAAY,CAACS,OAAb,CAAqB;AAC3BI,gBAAAA,OAAO,EAAE;AADkB,eAArB,CAAP;AAVF;AAcA;AACD;AArBO;AADM;AAD0B,CAAhB,CAApB","sourcesContent":["import { QueryClient, UseMutationOptions, UseQueryOptions } from \"react-query\"\n\nimport { AxiosError } from \"axios\"\nimport { PromiseValue } from \"type-fest\"\nimport { notification } from \"antd\"\n\nexport const queryClient = new QueryClient({\n\tdefaultOptions: {\n\t\tqueries: {\n\t\t\tuseErrorBoundary: true,\n\t\t\trefetchOnWindowFocus: false,\n\t\t\tretry: false,\n\t\t\tonSuccess: (data: any) => {\n\t\t\t\tif (data?.data?.success) {\n\t\t\t\t\tswitch (data?.config?.method.toUpperCase()) {\n\t\t\t\t\t\tcase \"POST\":\n\t\t\t\t\t\t\treturn notification.success({\n\t\t\t\t\t\t\t\tmessage: \"Created Success\",\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\tcase \"PUT\":\n\t\t\t\t\t\t\treturn notification.success({\n\t\t\t\t\t\t\t\tmessage: \"Created Success\",\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\tcase \"DELETE\":\n\t\t\t\t\t\t\treturn notification.success({\n\t\t\t\t\t\t\t\tmessage: \"Created Success\",\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n})\nexport type QueryConfig<FetcherFnType extends (...args: any) => any> =\n\tUseQueryOptions<PromiseValue<ReturnType<FetcherFnType>>>\n\nexport type MutationConfig<FetcherFnType extends (...args: any) => any> =\n\tUseMutationOptions<\n\t\tPromiseValue<ReturnType<FetcherFnType>>,\n\t\tAxiosError,\n\t\tParameters<FetcherFnType>[0]\n\t>\n"]},"metadata":{},"sourceType":"module"}