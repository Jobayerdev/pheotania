{"ast":null,"code":"var _jsxFileName = \"/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/users/components/UsersList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Popconfirm, Space, Table } from \"antd\";\nimport React, { useState } from \"react\";\nimport { PathEnum } from \"@shared/enums\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUsers } from \"../hooks/useUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersList = () => {\n  _s();\n\n  var _data$data, _data$data$payload, _data$data2;\n\n  const navigate = useNavigate();\n  const [page, setPage] = useState(1);\n  const {\n    data,\n    isLoading\n  } = useUsers({\n    options: {\n      page: page,\n      take: 10\n    }\n  });\n  const dataSource = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$payload = _data$data.payload) === null || _data$data$payload === void 0 ? void 0 : _data$data$payload.map(x => ({\n    id: x.id,\n    name: x.name,\n    email: x.email,\n    address: x.address || \"N/A\",\n    phoneNumber: x.phoneNumber,\n    type: x.type\n  }));\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"email\"\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }, {\n    title: \"phoneNumber\",\n    key: \"phoneNumber\",\n    dataIndex: \"phoneNumber\"\n  }, {\n    title: \"Type\",\n    key: \"type\",\n    dataIndex: \"type\"\n  }, {\n    title: \"Action\",\n    dataIndex: \"id\",\n    key: \"id\",\n    render: id => /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => navigate(`${PathEnum.UserUpdate}/${id}`),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n        okButtonProps: {\n          loading: false\n        },\n        title: \"Are you sure to delete this task?\",\n        onConfirm: () => navigate(`${PathEnum.UserUpdate}/${id}`),\n        okText: \"Yes\",\n        cancelText: \"No\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          danger: true,\n          type: \"primary\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: dataSource,\n    loading: isLoading,\n    pagination: {\n      pageSize: 10,\n      total: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.total,\n      onChange: page => {\n        setPage(page);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UsersList, \"yyAvBBAke/ut324mF/wkn2hnq8k=\", false, function () {\n  return [useNavigate, useUsers];\n});\n\n_c = UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/users/components/UsersList.tsx"],"names":["Button","Popconfirm","Space","Table","React","useState","PathEnum","useNavigate","useUsers","UsersList","navigate","page","setPage","data","isLoading","options","take","dataSource","payload","map","x","id","name","email","address","phoneNumber","type","columns","title","dataIndex","key","render","UserUpdate","loading","pageSize","total","onChange"],"mappings":"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","sourcesContent":["import { Button, Popconfirm, Space, Table } from \"antd\"\nimport React, { useState } from \"react\"\n\nimport { IUser } from \"@shared/interfaces\"\nimport { PathEnum } from \"@shared/enums\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useUsers } from \"../hooks/useUsers\"\n\nexport const UsersList = () => {\n\tconst navigate = useNavigate()\n\tconst [page, setPage] = useState<number>(1)\n\tconst { data, isLoading } = useUsers({\n\t\toptions: {\n\t\t\tpage: page,\n\t\t\ttake: 10,\n\t\t},\n\t})\n\tconst dataSource = data?.data?.payload?.map((x: IUser) => ({\n\t\tid: x.id,\n\t\tname: x.name,\n\t\temail: x.email,\n\t\taddress: x.address || \"N/A\",\n\t\tphoneNumber: x.phoneNumber,\n\t\ttype: x.type,\n\t}))\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: \"Name\",\n\t\t\tdataIndex: \"name\",\n\t\t\tkey: \"name\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Email\",\n\t\t\tdataIndex: \"email\",\n\t\t\tkey: \"email\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Address\",\n\t\t\tdataIndex: \"address\",\n\t\t\tkey: \"address\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"phoneNumber\",\n\t\t\tkey: \"phoneNumber\",\n\t\t\tdataIndex: \"phoneNumber\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Type\",\n\t\t\tkey: \"type\",\n\t\t\tdataIndex: \"type\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Action\",\n\t\t\tdataIndex: \"id\",\n\t\t\tkey: \"id\",\n\t\t\trender: (id: any) => (\n\t\t\t\t<Space>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tonClick={() => navigate(`${PathEnum.UserUpdate}/${id}`)}>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttitle=\"Are you sure to delete this task?\"\n\t\t\t\t\t\tonConfirm={() => navigate(`${PathEnum.UserUpdate}/${id}`)}\n\t\t\t\t\t\tokText=\"Yes\"\n\t\t\t\t\t\tcancelText=\"No\">\n\t\t\t\t\t\t<Button danger type=\"primary\">\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Popconfirm>\n\t\t\t\t</Space>\n\t\t\t),\n\t\t},\n\t]\n\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\tdataSource={dataSource}\n\t\t\tloading={isLoading}\n\t\t\tpagination={{\n\t\t\t\tpageSize: 10,\n\t\t\t\ttotal: data?.data?.total,\n\t\t\t\tonChange: (page: number) => {\n\t\t\t\t\tsetPage(page)\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}