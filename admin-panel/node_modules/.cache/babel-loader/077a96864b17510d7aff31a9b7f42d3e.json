{"ast":null,"code":"import axios from \"axios\";\nimport { ENV } from \"./../../../ENV\";\nimport { notification } from \"antd\";\nimport { storage } from \"@shared/utils\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  \"X-Request-ID\": 124,\n  \"X-Country-Code\": \"BD\",\n  \"X-Client-Name\": \"CRM\",\n  \"X-Client-Version\": 123,\n  Authorization: `Bearer ${storage === null || storage === void 0 ? void 0 : storage.getToken()}`\n};\nexport const CoreAxiosInstance = axios.create({\n  baseURL: ENV.CORE_END_POINT,\n  timeout: 60000,\n  headers\n});\nCoreAxiosInstance.interceptors.request.use(config => {\n  config.headers[\"Authorization\"] = `Bearer ${storage === null || storage === void 0 ? void 0 : storage.getToken()}`;\n  return config;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\nCoreAxiosInstance.interceptors.response.use(response => {\n  var _response$data, _response$config;\n\n  if (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.success) {\n    switch (response === null || response === void 0 ? void 0 : (_response$config = response.config) === null || _response$config === void 0 ? void 0 : _response$config.method.toUpperCase()) {\n      case \"POST\":\n        notification.success({\n          message: \"Created Success\",\n          type: \"success\"\n        });\n        return response;\n\n      case \"PUT\":\n        notification.success({\n          message: \"Update Success\",\n          type: \"success\"\n        });\n        return response;\n\n      case \"DELETE\":\n        notification.success({\n          message: \"Deleted Success\",\n          type: \"success\"\n        });\n        return response;\n    }\n  }\n\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response2$data;\n\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    storage.clear();\n    window.location.assign(window.location.origin);\n  } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.success) === false) {\n    var _error$response3, _error$response3$data, _error$response3$data2;\n\n    (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : (_error$response3$data2 = _error$response3$data.errorMessages) === null || _error$response3$data2 === void 0 ? void 0 : _error$response3$data2.map(x => {\n      return notification.error({\n        message: x,\n        duration: 100,\n        type: \"error\"\n      });\n    });\n  }\n\n  return error;\n});","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@shared/config/axios/core-axios-instantance.ts"],"names":["axios","ENV","notification","storage","headers","Authorization","getToken","CoreAxiosInstance","create","baseURL","CORE_END_POINT","timeout","interceptors","request","use","config","error","console","log","Promise","reject","response","data","success","method","toUpperCase","message","type","status","clear","window","location","assign","origin","errorMessages","map","x","duration"],"mappings":"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","sourcesContent":["import axios, { AxiosError } from \"axios\"\n\nimport { ENV } from \"./../../../ENV\"\nimport { notification } from \"antd\"\nimport { storage } from \"@shared/utils\"\n\nconst headers = {\n\t\"Content-Type\": \"application/json\",\n\t\"X-Request-ID\": 124,\n\t\"X-Country-Code\": \"BD\",\n\t\"X-Client-Name\": \"CRM\",\n\t\"X-Client-Version\": 123,\n\tAuthorization: `Bearer ${storage?.getToken()}`,\n}\nexport const CoreAxiosInstance = axios.create({\n\tbaseURL: ENV.CORE_END_POINT,\n\ttimeout: 60000,\n\theaders,\n})\nCoreAxiosInstance.interceptors.request.use(\n\t(config: any) => {\n\t\tconfig.headers[\"Authorization\"] = `Bearer ${storage?.getToken()}`\n\t\treturn config\n\t},\n\t(error: any) => {\n\t\tconsole.log(error)\n\t\treturn Promise.reject(error)\n\t}\n)\nCoreAxiosInstance.interceptors.response.use(\n\t(response: any) => {\n\t\tif (response?.data?.success) {\n\t\t\tswitch (response?.config?.method.toUpperCase()) {\n\t\t\t\tcase \"POST\":\n\t\t\t\t\tnotification.success({\n\t\t\t\t\t\tmessage: \"Created Success\",\n\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t})\n\t\t\t\t\treturn response\n\n\t\t\t\tcase \"PUT\":\n\t\t\t\t\tnotification.success({\n\t\t\t\t\t\tmessage: \"Update Success\",\n\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t})\n\t\t\t\t\treturn response\n\n\t\t\t\tcase \"DELETE\":\n\t\t\t\t\tnotification.success({\n\t\t\t\t\t\tmessage: \"Deleted Success\",\n\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t})\n\t\t\t\t\treturn response\n\t\t\t}\n\t\t}\n\t\treturn response\n\t},\n\t(error: AxiosError) => {\n\t\tif (error?.response?.status === 401) {\n\t\t\tstorage.clear()\n\t\t\twindow.location.assign(window.location.origin as unknown as string)\n\t\t} else if (error.response?.data?.success === false) {\n\t\t\terror.response?.data?.errorMessages?.map((x: string) => {\n\t\t\t\treturn notification.error({\n\t\t\t\t\tmessage: x,\n\t\t\t\t\tduration: 100,\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t\treturn error\n\t}\n)\n"]},"metadata":{},"sourceType":"module"}