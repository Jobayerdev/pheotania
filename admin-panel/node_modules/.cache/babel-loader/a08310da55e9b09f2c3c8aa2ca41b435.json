{"ast":null,"code":"import{CoreAxiosInstance}from\"@shared/config\";import{concatFilterQuery}from\"@shared/utils\";var END_POINT=\"/permission-types/\";export var PermissionTypesService={create:function create(payload){return CoreAxiosInstance.post(END_POINT,payload);},filter:function filter(options){return CoreAxiosInstance.get(\"\".concat(END_POINT,\"?\").concat(concatFilterQuery(options)));},filterSingle:function filterSingle(id){return CoreAxiosInstance.get(\"\".concat(END_POINT).concat(id));},update:function update(payload){var id=payload.id,title=payload.title;return CoreAxiosInstance.put(\"\".concat(END_POINT).concat(id),{title:title});},delete:function _delete(id){return CoreAxiosInstance.delete(\"\".concat(END_POINT).concat(id));}};","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@shared/services/permission-types.service.ts"],"names":["CoreAxiosInstance","concatFilterQuery","END_POINT","PermissionTypesService","create","payload","post","filter","options","get","filterSingle","id","update","title","put","delete"],"mappings":"AAMA,OAASA,iBAAT,KAAkC,gBAAlC,CACA,OAASC,iBAAT,KAAkC,eAAlC,CAEA,GAAMC,CAAAA,SAAiB,CAAG,oBAA1B,CAEA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,CACrCC,MADqC,iBAC9BC,OAD8B,CACE,CACtC,MAAOL,CAAAA,iBAAiB,CAACM,IAAlB,CAAuBJ,SAAvB,CAAkCG,OAAlC,CAAP,CACA,CAHoC,CAIrCE,MAJqC,iBAI9BC,OAJ8B,CAIR,CAC5B,MAAOR,CAAAA,iBAAiB,CAACS,GAAlB,WAAyBP,SAAzB,aAAsCD,iBAAiB,CAACO,OAAD,CAAvD,EAAP,CACA,CANoC,CAOrCE,YAPqC,uBAOxBC,EAPwB,CAOZ,CACxB,MAAOX,CAAAA,iBAAiB,CAACS,GAAlB,WAAyBP,SAAzB,SAAqCS,EAArC,EAAP,CACA,CAToC,CAUrCC,MAVqC,iBAU9BP,OAV8B,CAUE,CACtC,GAAQM,CAAAA,EAAR,CAAsBN,OAAtB,CAAQM,EAAR,CAAYE,KAAZ,CAAsBR,OAAtB,CAAYQ,KAAZ,CACA,MAAOb,CAAAA,iBAAiB,CAACc,GAAlB,WAAyBZ,SAAzB,SAAqCS,EAArC,EAA2C,CAAEE,KAAK,CAALA,KAAF,CAA3C,CAAP,CACA,CAboC,CAcrCE,MAdqC,kBAc9BJ,EAd8B,CAclB,CAClB,MAAOX,CAAAA,iBAAiB,CAACe,MAAlB,WAA4Bb,SAA5B,SAAwCS,EAAxC,EAAP,CACA,CAhBoC,CAA/B","sourcesContent":["import {\n\tIBaseFilter,\n\tICreatePermissionType,\n\tIUpdatePermissionType,\n} from \"@shared/interfaces\"\n\nimport { CoreAxiosInstance } from \"@shared/config\"\nimport { concatFilterQuery } from \"@shared/utils\"\n\nconst END_POINT: string = \"/permission-types/\"\n\nexport const PermissionTypesService = {\n\tcreate(payload: ICreatePermissionType) {\n\t\treturn CoreAxiosInstance.post(END_POINT, payload)\n\t},\n\tfilter(options: IBaseFilter) {\n\t\treturn CoreAxiosInstance.get(`${END_POINT}?${concatFilterQuery(options)}`)\n\t},\n\tfilterSingle(id: string) {\n\t\treturn CoreAxiosInstance.get(`${END_POINT}${id}`)\n\t},\n\tupdate(payload: IUpdatePermissionType) {\n\t\tconst { id, title } = payload\n\t\treturn CoreAxiosInstance.put(`${END_POINT}${id}`, { title })\n\t},\n\tdelete(id: string) {\n\t\treturn CoreAxiosInstance.delete(`${END_POINT}${id}`)\n\t},\n}\n"]},"metadata":{},"sourceType":"module"}