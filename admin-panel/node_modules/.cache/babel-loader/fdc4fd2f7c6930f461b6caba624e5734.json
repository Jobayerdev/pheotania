{"ast":null,"code":"import _objectSpread from\"/home/jobayer/Documents/@poshapets/poshapets-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{PageHeader,Spin}from\"antd\";import{useNavigate,useParams}from\"react-router-dom\";import{Authorization}from\"@modules/auth\";import{Paths}from\"@shared/enums\";import PermissionTypeUpdateForm from\"../components/elements/PermissionTypeUpdateForm\";import{usePermissionType}from\"../hooks/usePermissionType\";import{useUpdatePermissionType}from\"../hooks/useUpdatePermissionType\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PermissionTypeUpdatePage=function PermissionTypeUpdatePage(){var _data$data,_data$data$payload;var navigate=useNavigate();var _useParams=useParams(),id=_useParams.id;var _usePermissionType=usePermissionType({id:id}),data=_usePermissionType.data,isLoading=_usePermissionType.isLoading;var updatePermissionTypeMutation=useUpdatePermissionType({config:{onSuccess:function onSuccess(data){navigate(Paths.PermissionsTypeList);}}});return isLoading?/*#__PURE__*/_jsx(Spin,{}):/*#__PURE__*/_jsxs(Authorization,{allowedAccess:[\"PermissionTypeModify\"],children:[/*#__PURE__*/_jsx(PageHeader,{onBack:function onBack(){return null;},title:\"Update Role\"}),/*#__PURE__*/_jsx(PermissionTypeUpdateForm,{initialValues:{title:data===null||data===void 0?void 0:(_data$data=data.data)===null||_data$data===void 0?void 0:(_data$data$payload=_data$data.payload)===null||_data$data$payload===void 0?void 0:_data$data$payload.title},isLoading:updatePermissionTypeMutation.isLoading,onFinish:function onFinish(values){return updatePermissionTypeMutation.mutateAsync(_objectSpread(_objectSpread({},values),{},{id:id}));}})]});};export default PermissionTypeUpdatePage;","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/permission/routes/PermissionTypeUpdatePage.tsx"],"names":["PageHeader","Spin","useNavigate","useParams","Authorization","Paths","PermissionTypeUpdateForm","usePermissionType","useUpdatePermissionType","PermissionTypeUpdatePage","navigate","id","data","isLoading","updatePermissionTypeMutation","config","onSuccess","PermissionsTypeList","title","payload","values","mutateAsync"],"mappings":"wKAAA,OAASA,UAAT,CAAqBC,IAArB,KAAiC,MAAjC,CACA,OAASC,WAAT,CAAsBC,SAAtB,KAAuC,kBAAvC,CAEA,OAASC,aAAT,KAA8B,eAA9B,CAEA,OAASC,KAAT,KAAsB,eAAtB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,iDAArC,CACA,OAASC,iBAAT,KAAkC,4BAAlC,CACA,OAASC,uBAAT,KAAwC,kCAAxC,C,wFAEA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,mCACtC,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACA,eAAeC,SAAS,EAAxB,CAAQQ,EAAR,YAAQA,EAAR,CACA,uBAA4BJ,iBAAiB,CAAC,CAAEI,EAAE,CAAFA,EAAF,CAAD,CAA7C,CAAQC,IAAR,oBAAQA,IAAR,CAAcC,SAAd,oBAAcA,SAAd,CAEA,GAAMC,CAAAA,4BAA4B,CAAGN,uBAAuB,CAAC,CAC5DO,MAAM,CAAE,CACPC,SAAS,CAAE,mBAACJ,IAAD,CAAyB,CACnCF,QAAQ,CAACL,KAAK,CAACY,mBAAP,CAAR,CACA,CAHM,CADoD,CAAD,CAA5D,CAQA,MAAOJ,CAAAA,SAAS,cACf,KAAC,IAAD,IADe,cAGf,MAAC,aAAD,EAAe,aAAa,CAAE,CAAC,sBAAD,CAA9B,wBACC,KAAC,UAAD,EAAY,MAAM,CAAE,wBAAM,KAAN,EAApB,CAAgC,KAAK,CAAC,aAAtC,EADD,cAEC,KAAC,wBAAD,EACC,aAAa,CAAE,CACdK,KAAK,CAAEN,IAAF,SAAEA,IAAF,6BAAEA,IAAI,CAAEA,IAAR,yDAAE,WAAYO,OAAd,6CAAE,mBAAqBD,KADd,CADhB,CAIC,SAAS,CAAEJ,4BAA4B,CAACD,SAJzC,CAKC,QAAQ,CAAE,kBAACO,MAAD,QAAYN,CAAAA,4BAA4B,CAACO,WAA7B,gCAA8CD,MAA9C,MAAsDT,EAAE,CAAFA,EAAtD,GAAZ,EALX,EAFD,GAHD,CAcA,CA3BD,CA6BA,cAAeF,CAAAA,wBAAf","sourcesContent":["import { PageHeader, Spin } from \"antd\"\nimport { useNavigate, useParams } from \"react-router-dom\"\n\nimport { Authorization } from \"@modules/auth\"\nimport { AxiosResponse } from \"axios\"\nimport { Paths } from \"@shared/enums\"\nimport PermissionTypeUpdateForm from \"../components/elements/PermissionTypeUpdateForm\"\nimport { usePermissionType } from \"../hooks/usePermissionType\"\nimport { useUpdatePermissionType } from \"../hooks/useUpdatePermissionType\"\n\nconst PermissionTypeUpdatePage = () => {\n\tconst navigate = useNavigate()\n\tconst { id } = useParams()\n\tconst { data, isLoading } = usePermissionType({ id })\n\n\tconst updatePermissionTypeMutation = useUpdatePermissionType({\n\t\tconfig: {\n\t\t\tonSuccess: (data: AxiosResponse) => {\n\t\t\t\tnavigate(Paths.PermissionsTypeList)\n\t\t\t},\n\t\t},\n\t})\n\n\treturn isLoading ? (\n\t\t<Spin />\n\t) : (\n\t\t<Authorization allowedAccess={[\"PermissionTypeModify\"]}>\n\t\t\t<PageHeader onBack={() => null} title=\"Update Role\" />\n\t\t\t<PermissionTypeUpdateForm\n\t\t\t\tinitialValues={{\n\t\t\t\t\ttitle: data?.data?.payload?.title,\n\t\t\t\t}}\n\t\t\t\tisLoading={updatePermissionTypeMutation.isLoading}\n\t\t\t\tonFinish={(values) => updatePermissionTypeMutation.mutateAsync({ ...values, id })}\n\t\t\t/>\n\t\t</Authorization>\n\t)\n}\n\nexport default PermissionTypeUpdatePage\n"]},"metadata":{},"sourceType":"module"}