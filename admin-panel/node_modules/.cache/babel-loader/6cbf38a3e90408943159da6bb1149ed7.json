{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { AuthService } from \"@shared/services/auth.service\";\nimport { notification } from \"antd\";\nimport { storage } from \"@shared/utils\";\nimport { useMutation } from \"react-query\";\nexport const useAuth = () => {\n  _s();\n\n  const loginFn = useMutation(AuthService.login, {\n    onSuccess: val => {\n      var _val$payload;\n\n      storage.setToken(val === null || val === void 0 ? void 0 : (_val$payload = val.payload) === null || _val$payload === void 0 ? void 0 : _val$payload.token);\n      notification.success({\n        message: \"Auth Login Success\"\n      });\n    }\n  });\n\n  const logoutFn = () => {\n    storage.clearToken();\n    window.location.assign(window.location.origin);\n  };\n\n  const loadUserFn = () => {\n    console.log(\"Use in future\");\n  };\n\n  return {\n    loginFn,\n    logoutFn,\n    loadUserFn\n  };\n};\n\n_s(useAuth, \"yoe9FIAzc7AtU8LGCSqAN4JOAGM=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/auth/hooks/useAuth.tsx"],"names":["AuthService","notification","storage","useMutation","useAuth","loginFn","login","onSuccess","val","setToken","payload","token","success","message","logoutFn","clearToken","window","location","assign","origin","loadUserFn","console","log"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,+BAA5B;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC5B,QAAMC,OAAO,GAAGF,WAAW,CAACH,WAAW,CAACM,KAAb,EAAoB;AAC9CC,IAAAA,SAAS,EAAGC,GAAD,IAAS;AAAA;;AACnBN,MAAAA,OAAO,CAACO,QAAR,CAAiBD,GAAjB,aAAiBA,GAAjB,uCAAiBA,GAAG,CAAEE,OAAtB,iDAAiB,aAAcC,KAA/B;AACAV,MAAAA,YAAY,CAACW,OAAb,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AAJ6C,GAApB,CAA3B;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACtBZ,IAAAA,OAAO,CAACa,UAAR;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBF,MAAM,CAACC,QAAP,CAAgBE,MAAvC;AACA,GAHD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,GAFD;;AAIA,SAAO;AACNjB,IAAAA,OADM;AAENS,IAAAA,QAFM;AAGNM,IAAAA;AAHM,GAAP;AAKA,CApBM;;GAAMhB,O;UACID,W","sourcesContent":["import { AuthService } from \"@shared/services/auth.service\"\nimport { notification } from \"antd\"\nimport { storage } from \"@shared/utils\"\nimport { useMutation } from \"react-query\"\n\nexport const useAuth = () => {\n\tconst loginFn = useMutation(AuthService.login, {\n\t\tonSuccess: (val) => {\n\t\t\tstorage.setToken(val?.payload?.token)\n\t\t\tnotification.success({ message: \"Auth Login Success\" })\n\t\t},\n\t})\n\tconst logoutFn = () => {\n\t\tstorage.clearToken()\n\t\twindow.location.assign(window.location.origin as unknown as string)\n\t}\n\tconst loadUserFn = () => {\n\t\tconsole.log(\"Use in future\")\n\t}\n\n\treturn {\n\t\tloginFn,\n\t\tlogoutFn,\n\t\tloadUserFn,\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}