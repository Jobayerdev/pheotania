{"ast":null,"code":"var _jsxFileName = \"/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/permission/components/PermissionCreateForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input, Select } from \"antd\";\nimport { usePermissionTypes } from \"../hooks/usePermissionTypes\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst PermissionCreateForm = ({\n  onFinish\n}) => {\n  _s();\n\n  var _data$data;\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const {\n    data\n  } = usePermissionTypes({\n    options: {\n      searchTerm: searchTerm\n    }\n  });\n\n  function onSearch(val) {\n    setSearchTerm(val);\n  }\n\n  const selectOptions = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.payload;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    size: \"middle\",\n    layout: \"vertical\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Title\",\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: \"Please input role title!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Type here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Permission Type\",\n      name: \"permissionType\",\n      rules: [{\n        required: true,\n        message: \"Please select permission type\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"select a value\",\n        showSearch: true,\n        optionFilterProp: \"children\",\n        onSearch: onSearch,\n        filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n        children: selectOptions === null || selectOptions === void 0 ? void 0 : selectOptions.map(op => /*#__PURE__*/_jsxDEV(Option, {\n          value: op.id,\n          children: op.title\n        }, op.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 67\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PermissionCreateForm, \"aqkF8RzJVHzDQ2wLDQe9xNpenTg=\", false, function () {\n  return [usePermissionTypes];\n});\n\n_c = PermissionCreateForm;\nexport default PermissionCreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PermissionCreateForm\");","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/permission/components/PermissionCreateForm.tsx"],"names":["Button","Form","Input","Select","usePermissionTypes","useState","Option","PermissionCreateForm","onFinish","searchTerm","setSearchTerm","data","options","onSearch","val","selectOptions","payload","required","message","input","option","children","toLowerCase","indexOf","map","op","id","title"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA4C,MAA5C;AAGA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,MAAnB;;AAQA,MAAMI,oBAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAAA;;AAE9D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAS,EAAT,CAA5C;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAWP,kBAAkB,CAAC;AACtCQ,IAAAA,OAAO,EAAE;AACRH,MAAAA,UAAU,EAAEA;AADJ;AAD6B,GAAD,CAAnC;;AAMA,WAASI,QAAT,CAAkBC,GAAlB,EAA8B;AAC1BJ,IAAAA,aAAa,CAACI,GAAD,CAAb;AACH;;AAQD,QAAMC,aAAa,GAAGJ,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYK,OAAlC;AAEA,sBACI,QAAC,IAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,MAAM,EAAC,UAFX;AAGI,IAAA,QAAQ,EAAER,QAHd;AAAA,4BAII,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,CAAC;AAAES,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHX;AAAA,6BAII,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAUI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,iBADV;AAEI,MAAA,IAAI,EAAC,gBAFT;AAGI,MAAA,KAAK,EAAE,CAAC;AAAED,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHX;AAAA,6BAKI,QAAC,MAAD;AACI,QAAA,WAAW,EAAC,gBADhB;AAEI,QAAA,UAAU,MAFd;AAGI,QAAA,gBAAgB,EAAC,UAHrB;AAII,QAAA,QAAQ,EAAEL,QAJd;AAKI,QAAA,YAAY,EAAE,CAACM,KAAD,EAAQC,MAAR,KACVA,MAAM,CAACC,QAAP,CAAgBC,WAAhB,GAA8BC,OAA9B,CAAsCJ,KAAK,CAACG,WAAN,EAAtC,KAA8D,CANtE;AAAA,kBAUQP,aAVR,aAUQA,aAVR,uBAUQA,aAAa,CAAES,GAAf,CAAoBC,EAAD,iBAAuB,QAAC,MAAD;AAAoB,UAAA,KAAK,EAAEA,EAAE,CAACC,EAA9B;AAAA,oBAAmCD,EAAE,CAACE;AAAtC,WAAaF,EAAE,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAA1C;AAVR;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAVJ,eAiCI,QAAC,IAAD,CAAM,IAAN;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CA/DD;;GAAMnB,oB;UAIeH,kB;;;KAJfG,oB;AAiEN,eAAeA,oBAAf","sourcesContent":["import { Button, Form, Input, Select } from \"antd\";\n\nimport { IPermissions } from \"@shared/interfaces\";\nimport { usePermissionTypes } from \"../hooks/usePermissionTypes\";\nimport { useState } from \"react\";\n\nconst { Option } = Select;\n\ninterface IFProps {\n    onFinish: (values: IPermissions) => void;\n    isLoading?: boolean\n}\n\n\nconst PermissionCreateForm: React.FC<IFProps> = ({ onFinish }) => {\n\n    const [searchTerm, setSearchTerm] = useState<string>(\"\")\n\n    const { data } = usePermissionTypes({\n\t\toptions: {\n\t\t\tsearchTerm: searchTerm\n\t\t},\n\t})\n\n    function onSearch(val:string) {\n        setSearchTerm(val)\n    }\n\n    interface ISelectOptions { \n            id: string\n            title: string\n        }\n    \n\n    const selectOptions = data?.data?.payload;\n\n    return (\n        <Form\n            size=\"middle\"\n            layout=\"vertical\"\n            onFinish={onFinish}>\n            <Form.Item\n                label=\"Title\"\n                name=\"title\"\n                rules={[{ required: true, message: \"Please input role title!\" }]}>\n                <Input placeholder=\"Type here\" />\n            </Form.Item>\n            <Form.Item\n                label=\"Permission Type\"\n                name=\"permissionType\"\n                rules={[{ required: true, message: \"Please select permission type\" }]}>\n\n                <Select\n                    placeholder=\"select a value\"\n                    showSearch\n                    optionFilterProp=\"children\"\n                    onSearch={onSearch}\n                    filterOption={(input, option:any) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {\n                        selectOptions?.map((op:ISelectOptions) => <Option key={op.id} value={op.id}>{op.title}</Option>)\n                    }\n                    \n                </Select>\n            </Form.Item>\n\n\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default PermissionCreateForm;"]},"metadata":{},"sourceType":"module"}