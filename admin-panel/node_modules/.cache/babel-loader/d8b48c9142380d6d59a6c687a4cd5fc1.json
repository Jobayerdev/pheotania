{"ast":null,"code":"import { CoreAxiosInstance } from \"./../config/axios/core-axios-instantance\";\nimport { concatFilterQuery } from \"@shared/utils\";\nconst END_POINT = \"/petTypes/\";\nexport const PetTypeService = {\n  create(payload) {\n    console.log(payload);\n    return CoreAxiosInstance.post(END_POINT, payload);\n  },\n\n  filter(options) {\n    return CoreAxiosInstance.get(`${END_POINT}?${concatFilterQuery(options)}`);\n  },\n\n  filterSingle(payload) {\n    return CoreAxiosInstance.get(`${END_POINT}${payload}`);\n  },\n\n  update(payload) {\n    const {\n      id,\n      name\n    } = payload;\n    return CoreAxiosInstance.put(`${END_POINT}${id}`, {\n      name\n    });\n  },\n\n  delete(id) {\n    return CoreAxiosInstance.delete(`${END_POINT}${id}`);\n  }\n\n};","map":{"version":3,"sources":["/home/jobayer/Documents/@projects-backlogs/Geflex/admin-panel/src/@shared/services/petType.service.ts"],"names":["CoreAxiosInstance","concatFilterQuery","END_POINT","PetTypeService","create","payload","console","log","post","filter","options","get","filterSingle","update","id","name","put","delete"],"mappings":"AAEA,SAASA,iBAAT,QAAkC,0CAAlC;AACA,SAASC,iBAAT,QAAkC,eAAlC;AAGA,MAAMC,SAAiB,GAAG,YAA1B;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,MAAM,CAACC,OAAD,EAA2B;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAOL,iBAAiB,CAACQ,IAAlB,CAAuBN,SAAvB,EAAkCG,OAAlC,CAAP;AACD,GAJ2B;;AAK5BI,EAAAA,MAAM,CAACC,OAAD,EAAuB;AAC3B,WAAOV,iBAAiB,CAACW,GAAlB,CAAuB,GAAET,SAAU,IAAGD,iBAAiB,CAACS,OAAD,CAAU,EAAjE,CAAP;AACD,GAP2B;;AAQ5BE,EAAAA,YAAY,CAACP,OAAD,EAAkB;AAC5B,WAAOL,iBAAiB,CAACW,GAAlB,CAAuB,GAAET,SAAU,GAAEG,OAAQ,EAA7C,CAAP;AACD,GAV2B;;AAW5BQ,EAAAA,MAAM,CAACR,OAAD,EAA2B;AAC/B,UAAM;AAAES,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAeV,OAArB;AACA,WAAOL,iBAAiB,CAACgB,GAAlB,CAAuB,GAAEd,SAAU,GAAEY,EAAG,EAAxC,EAA2C;AAChDC,MAAAA;AADgD,KAA3C,CAAP;AAGD,GAhB2B;;AAiB5BE,EAAAA,MAAM,CAACH,EAAD,EAAa;AACjB,WAAOd,iBAAiB,CAACiB,MAAlB,CAA0B,GAAEf,SAAU,GAAEY,EAAG,EAA3C,CAAP;AACD;;AAnB2B,CAAvB","sourcesContent":["import { IBaseFilter } from \"@shared/interfaces\";\n\nimport { CoreAxiosInstance } from \"./../config/axios/core-axios-instantance\";\nimport { concatFilterQuery } from \"@shared/utils\";\nimport { IFCreatePetType, IFUpdatePetType } from \"@shared/interfaces/petType.interface\";\n\nconst END_POINT: string = \"/petTypes/\";\n\nexport const PetTypeService = {\n  create(payload: IFCreatePetType) {\n    console.log(payload);\n    return CoreAxiosInstance.post(END_POINT, payload);\n  },\n  filter(options: IBaseFilter) {\n    return CoreAxiosInstance.get(`${END_POINT}?${concatFilterQuery(options)}`);\n  },\n  filterSingle(payload: string) {\n    return CoreAxiosInstance.get(`${END_POINT}${payload}`);\n  },\n  update(payload: IFUpdatePetType) {\n    const { id, name } = payload;\n    return CoreAxiosInstance.put(`${END_POINT}${id}`, {\n      name,\n    });\n  },\n  delete(id: string) {\n    return CoreAxiosInstance.delete(`${END_POINT}${id}`);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}