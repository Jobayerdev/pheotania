{"ast":null,"code":"var _jsxFileName = \"/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/banners/components/CreateBannerForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Col, Form, Input, Row, Select, Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst CreateBannerForm = () => {\n  _s();\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const onSearch = value => {\n    console.log(value);\n  };\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n\n    const isLt2M = file.size / 1024 / 1024 < 2;\n\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    return isJpgOrPng && isLt2M;\n  }\n\n  const [image, setImage] = useState({\n    loading: false,\n    imageUrl: null\n  });\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setImage({\n        loading: true\n      });\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => setImage({\n        imageUrl,\n        loading: false\n      }));\n    }\n  };\n\n  const {\n    loading,\n    imageUrl\n  } = image;\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n\n  console.log(imageUrl);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banner-create-form\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: {\n        xs: 10,\n        sm: 16,\n        md: 24,\n        lg: 32\n      },\n      align: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 10,\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          name: \"avatar\",\n          listType: \"picture-card\",\n          className: \"avatar-uploader\",\n          showUploadList: false,\n          action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n          beforeUpload: beforeUpload,\n          onChange: handleChange,\n          children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"avatar\",\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this) : uploadButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 14,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          size: \"large\",\n          layout: \"vertical\",\n          onFinish: onFinish,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Title\",\n            name: \"title\",\n            rules: [{\n              required: true,\n              message: 'Please input a title!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Banner title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            initialValue: imageUrl ? imageUrl : null,\n            label: \"Banner Url\",\n            name: \"bannerUrl\",\n            rules: [{\n              required: true,\n              message: 'Please input a title!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: imageUrl,\n              placeholder: \"Banner Ulr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Banner Type\",\n            name: \"bannerType\",\n            rules: [{\n              required: true,\n              message: 'Please input a title!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              showSearch: true,\n              placeholder: \"Select a type\",\n              optionFilterProp: \"children\",\n              onSearch: onSearch,\n              filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"jack\",\n                children: \"Jack\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"lucy\",\n                children: \"Lucy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"tom\",\n                children: \"Tom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateBannerForm, \"XT7JmoF+jOVI3vPWtDqSUOS4lC4=\");\n\n_c = CreateBannerForm;\nexport default CreateBannerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateBannerForm\");","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/banners/components/CreateBannerForm.tsx"],"names":["Col","Form","Input","Row","Select","Upload","message","LoadingOutlined","PlusOutlined","useState","Option","CreateBannerForm","onFinish","values","console","log","onSearch","value","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","image","setImage","loading","imageUrl","handleChange","info","status","originFileObj","uploadButton","marginTop","xs","sm","md","lg","width","required","input","option","children","toLowerCase","indexOf"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,OAAhD,QAA+D,MAA/D;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;AAEA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaN,MAAnB;;AAEA,MAAMO,gBAAgB,GAAG,MAAM;AAAA;;AAE3B,QAAMC,QAAQ,GAAIC,MAAD,IAAoB;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,GAFD;;AAIA,QAAMG,QAAQ,GAAIC,KAAD,IAAgB;AAC7BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,GAFD;;AAIA,WAASC,SAAT,CAAmBC,GAAnB,EAA6BC,QAA7B,EAA4C;AACxC,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,IAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACH;;AAED,WAASO,YAAT,CAAsBC,IAAtB,EAAiC;AAC7B,UAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,CAACE,IAAL,KAAc,WAA/D;;AACA,QAAI,CAACD,UAAL,EAAiB;AACbtB,MAAAA,OAAO,CAACwB,KAAR,CAAc,mCAAd;AACH;;AACD,UAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AACA,QAAI,CAACD,MAAL,EAAa;AACTzB,MAAAA,OAAO,CAACwB,KAAR,CAAc,8BAAd;AACH;;AACD,WAAOF,UAAU,IAAIG,MAArB;AACH;;AAED,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAyBzB,QAAQ,CAAC;AACpC0B,IAAAA,OAAO,EAAE,KAD2B;AAEpCC,IAAAA,QAAQ,EAAE;AAF0B,GAAD,CAAvC;;AAMA,QAAMC,YAAY,GAAIC,IAAD,IAAe;AAChC,QAAIA,IAAI,CAACX,IAAL,CAAUY,MAAV,KAAqB,WAAzB,EAAsC;AAClCL,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAR;AACA;AACH;;AACD,QAAIG,IAAI,CAACX,IAAL,CAAUY,MAAV,KAAqB,MAAzB,EAAiC;AAC7B;AACArB,MAAAA,SAAS,CAACoB,IAAI,CAACX,IAAL,CAAUa,aAAX,EAA2BJ,QAAD,IAC/BF,QAAQ,CAAC;AACLE,QAAAA,QADK;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAD,CADH,CAAT;AAMH;AACJ,GAdD;;AAgBA,QAAM;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAwBH,KAA9B;;AACA,QAAMQ,YAAY,gBACd;AAAA,eACKN,OAAO,gBAAG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAyB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADrC,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAOA5B,EAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE;AAAEO,QAAAA,EAAE,EAAE,EAAN;AAAUC,QAAAA,EAAE,EAAE,EAAd;AAAkBC,QAAAA,EAAE,EAAE,EAAtB;AAA0BC,QAAAA,EAAE,EAAE;AAA9B,OAAb;AAAiD,MAAA,KAAK,EAAC,QAAvD;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,QAAQ,EAAC,cAFb;AAGI,UAAA,SAAS,EAAC,iBAHd;AAII,UAAA,cAAc,EAAE,KAJpB;AAKI,UAAA,MAAM,EAAC,kDALX;AAMI,UAAA,YAAY,EAAEpB,YANlB;AAOI,UAAA,QAAQ,EAAEW,YAPd;AAAA,oBASKD,QAAQ,gBAAG;AAAK,YAAA,GAAG,EAAEA,QAAV;AAAoB,YAAA,GAAG,EAAC,QAAxB;AAAiC,YAAA,KAAK,EAAE;AAAEW,cAAAA,KAAK,EAAE;AAAT;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAAH,GAAmEN;AAThF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,MAAM,EAAC,UAFX;AAGI,UAAA,QAAQ,EAAE7B,QAHd;AAAA,kCAKI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,OADV;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,KAAK,EAAE,CAAC;AAAEoC,cAAAA,QAAQ,EAAE,IAAZ;AAAkB1C,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAHX;AAAA,mCAKI,QAAC,KAAD;AAAO,cAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAaI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,YAAY,EAAE8B,QAAQ,GAAGA,QAAH,GAAc,IADxC;AAEI,YAAA,KAAK,EAAC,YAFV;AAGI,YAAA,IAAI,EAAC,WAHT;AAII,YAAA,KAAK,EAAE,CAAC;AAAEY,cAAAA,QAAQ,EAAE,IAAZ;AAAkB1C,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAJX;AAAA,mCAMI,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE8B,QAAd;AAAuB,cAAA,WAAW,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAsBI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,aADV;AAEI,YAAA,IAAI,EAAC,YAFT;AAGI,YAAA,KAAK,EAAE,CAAC;AAAEY,cAAAA,QAAQ,EAAE,IAAZ;AAAkB1C,cAAAA,OAAO,EAAE;AAA3B,aAAD,CAHX;AAAA,mCAKI,QAAC,MAAD;AACI,cAAA,UAAU,MADd;AAEI,cAAA,WAAW,EAAC,eAFhB;AAGI,cAAA,gBAAgB,EAAC,UAHrB;AAII,cAAA,QAAQ,EAAEU,QAJd;AAKI,cAAA,YAAY,EAAE,CAACiC,KAAD,EAAQC,MAAR,KACVA,MAAM,CAACC,QAAP,CAAgBC,WAAhB,GAA8BC,OAA9B,CAAsCJ,KAAK,CAACG,WAAN,EAAtC,KAA8D,CANtE;AAAA,sCASI,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,eAUI,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAWI,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,kBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgEH,CA5HD;;GAAMzC,gB;;KAAAA,gB;AA8HN,eAAeA,gBAAf","sourcesContent":["import { Col, Form, Input, Row, Select, Upload, message } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport { useState } from 'react';\n\nconst { Option } = Select;\n\nconst CreateBannerForm = () => {\n\n    const onFinish = (values: object) => {\n        console.log(values);\n    }\n\n    const onSearch = (value: any) => {\n        console.log(value);\n    }\n\n    function getBase64(img: any, callback: any) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file: any) {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('Image must smaller than 2MB!');\n        }\n        return isJpgOrPng && isLt2M;\n    }\n\n    const [image, setImage]: any = useState({\n        loading: false,\n        imageUrl: null,\n    })\n\n\n    const handleChange = (info: any) => {\n        if (info.file.status === 'uploading') {\n            setImage({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, (imageUrl: any) =>\n                setImage({\n                    imageUrl,\n                    loading: false,\n                }),\n            );\n        }\n    };\n\n    const { loading, imageUrl } = image;\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload Image</div>\n        </div>\n    )\n\n    console.log(imageUrl);\n\n    return (\n        <div className=\"banner-create-form\">\n            <Row gutter={{ xs: 10, sm: 16, md: 24, lg: 32 }} align=\"middle\">\n                <Col span={10}>\n                    <Upload\n                        name=\"avatar\"\n                        listType=\"picture-card\"\n                        className=\"avatar-uploader\"\n                        showUploadList={false}\n                        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                        beforeUpload={beforeUpload}\n                        onChange={handleChange}\n                    >\n                        {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                    </Upload>\n                </Col>\n\n                <Col span={14}>\n                    <Form\n                        size=\"large\"\n                        layout=\"vertical\"\n                        onFinish={onFinish}\n                    >\n                        <Form.Item\n                            label=\"Title\"\n                            name=\"title\"\n                            rules={[{ required: true, message: 'Please input a title!' }]}\n                        >\n                            <Input placeholder=\"Banner title\"></Input>\n                        </Form.Item>\n\n                        <Form.Item\n                            initialValue={imageUrl ? imageUrl : null}\n                            label=\"Banner Url\"\n                            name=\"bannerUrl\"\n                            rules={[{ required: true, message: 'Please input a title!' }]}\n                        >\n                            <Input value={imageUrl}placeholder=\"Banner Ulr\"></Input>\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Banner Type\"\n                            name=\"bannerType\"\n                            rules={[{ required: true, message: 'Please input a title!' }]}\n                        >\n                            <Select\n                                showSearch\n                                placeholder=\"Select a type\"\n                                optionFilterProp=\"children\"\n                                onSearch={onSearch}\n                                filterOption={(input, option: any) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                            >\n                                <Option value=\"jack\">Jack</Option>\n                                <Option value=\"lucy\">Lucy</Option>\n                                <Option value=\"tom\">Tom</Option>\n                            </Select>\n                        </Form.Item>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default CreateBannerForm;"]},"metadata":{},"sourceType":"module"}