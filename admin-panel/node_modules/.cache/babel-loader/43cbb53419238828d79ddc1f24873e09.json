{"ast":null,"code":"import { ENV } from \"./../../../ENV\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\nimport { storage } from \"@shared/utils\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  \"X-Request-ID\": 124,\n  \"X-Country-Code\": \"BD\",\n  \"X-Client-Name\": \"CRM\",\n  \"X-Client-Version\": 123,\n  Authorization: `Bearer ${storage === null || storage === void 0 ? void 0 : storage.getToken()}`\n};\nexport const CoreAxiosInstance = axios.create({\n  baseURL: ENV.CORE_END_POINT,\n  timeout: 60000,\n  headers\n});\nCoreAxiosInstance.interceptors.request.use(config => {\n  config.headers[\"Authorization\"] = `Bearer ${storage === null || storage === void 0 ? void 0 : storage.getToken()}`;\n  return config;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\nCoreAxiosInstance.interceptors.response.use(response => {\n  console.log(response);\n  return response;\n}, error => {\n  var _error$response;\n\n  console.log(error.response);\n  notification.success({\n    message: \"dd\"\n  });\n\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    storage.clearToken();\n    window.location.assign(window.location.origin);\n  } else {\n    return error;\n  }\n});","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@shared/config/axios/core-axios-instantance.ts"],"names":["ENV","axios","notification","storage","headers","Authorization","getToken","CoreAxiosInstance","create","baseURL","CORE_END_POINT","timeout","interceptors","request","use","config","error","console","log","Promise","reject","response","success","message","status","clearToken","window","location","assign","origin"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,MAAMC,OAAO,GAAG;AACf,kBAAgB,kBADD;AAEf,kBAAgB,GAFD;AAGf,oBAAkB,IAHH;AAIf,mBAAiB,KAJF;AAKf,sBAAoB,GALL;AAMfC,EAAAA,aAAa,EAAG,UAASF,OAAV,aAAUA,OAAV,uBAAUA,OAAO,CAAEG,QAAT,EAAoB;AAN9B,CAAhB;AAQA,OAAO,MAAMC,iBAAiB,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC7CC,EAAAA,OAAO,EAAET,GAAG,CAACU,cADgC;AAE7CC,EAAAA,OAAO,EAAE,KAFoC;AAG7CP,EAAAA;AAH6C,CAAb,CAA1B;AAKPG,iBAAiB,CAACK,YAAlB,CAA+BC,OAA/B,CAAuCC,GAAvC,CACEC,MAAD,IAAiB;AAChBA,EAAAA,MAAM,CAACX,OAAP,CAAe,eAAf,IAAmC,UAASD,OAAV,aAAUA,OAAV,uBAAUA,OAAO,CAAEG,QAAT,EAAoB,EAAhE;AACA,SAAOS,MAAP;AACA,CAJF,EAKEC,KAAD,IAAgB;AACfC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACA,CARF;AAUAT,iBAAiB,CAACK,YAAlB,CAA+BS,QAA/B,CAAwCP,GAAxC,CACEO,QAAD,IAAmB;AAClBJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,SAAOA,QAAP;AACA,CAJF,EAKEL,KAAD,IAAgB;AAAA;;AACfC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,QAAlB;AACAnB,EAAAA,YAAY,CAACoB,OAAb,CAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB;;AACA,MAAI,CAAAP,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEK,QAAP,oEAAiBG,MAAjB,MAA4B,GAAhC,EAAqC;AACpCrB,IAAAA,OAAO,CAACsB,UAAR;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBF,MAAM,CAACC,QAAP,CAAgBE,MAAvC;AACA,GAHD,MAGO;AACN,WAAOb,KAAP;AACA;AACD,CAdF","sourcesContent":["import { ENV } from \"./../../../ENV\"\nimport axios from \"axios\"\nimport { notification } from \"antd\"\nimport { storage } from \"@shared/utils\"\nconst headers = {\n\t\"Content-Type\": \"application/json\",\n\t\"X-Request-ID\": 124,\n\t\"X-Country-Code\": \"BD\",\n\t\"X-Client-Name\": \"CRM\",\n\t\"X-Client-Version\": 123,\n\tAuthorization: `Bearer ${storage?.getToken()}`,\n}\nexport const CoreAxiosInstance = axios.create({\n\tbaseURL: ENV.CORE_END_POINT,\n\ttimeout: 60000,\n\theaders,\n})\nCoreAxiosInstance.interceptors.request.use(\n\t(config: any) => {\n\t\tconfig.headers[\"Authorization\"] = `Bearer ${storage?.getToken()}`\n\t\treturn config\n\t},\n\t(error: any) => {\n\t\tconsole.log(error)\n\t\treturn Promise.reject(error)\n\t}\n)\nCoreAxiosInstance.interceptors.response.use(\n\t(response: any) => {\n\t\tconsole.log(response)\n\t\treturn response\n\t},\n\t(error: any) => {\n\t\tconsole.log(error.response)\n\t\tnotification.success({ message: \"dd\" })\n\t\tif (error?.response?.status === 401) {\n\t\t\tstorage.clearToken()\n\t\t\twindow.location.assign(window.location.origin as unknown as string)\n\t\t} else {\n\t\t\treturn error\n\t\t}\n\t}\n)\n"]},"metadata":{},"sourceType":"module"}