{"ast":null,"code":"var _jsxFileName = \"/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/permission/routes/RoleUpdatePage.tsx\",\n    _s = $RefreshSig$();\n\nimport { PageHeader, Spin } from \"antd\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Authorization } from \"@modules/auth\";\nimport { PathEnum } from \"@shared/enums\";\nimport UpdateRoleForm from \"../components/UpdateRoleForm\";\nimport { useRole } from \"../hooks/useRole\";\nimport { useUpdateRole } from \"../hooks/useUpdateRole\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RoleUpdatePage = () => {\n  _s();\n\n  var _data$data, _data$data$payload, _data$data2, _data$data2$payload;\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    isLoading\n  } = useRole({\n    id\n  });\n  const updateRoleMutation = useUpdateRole({\n    config: {\n      onSuccess: data => {\n        navigate(PathEnum.RolesList);\n      }\n    }\n  });\n  return isLoading ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(Authorization, {\n    allowedAccess: [\"UserModify\"],\n    children: [\" \", /*#__PURE__*/_jsxDEV(PageHeader, {\n      onBack: () => null,\n      title: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(UpdateRoleForm, {\n      initialValues: {\n        title: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$payload = _data$data.payload) === null || _data$data$payload === void 0 ? void 0 : _data$data$payload.title,\n        isActive: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : (_data$data2$payload = _data$data2.payload) === null || _data$data2$payload === void 0 ? void 0 : _data$data2$payload.isActive\n      },\n      isLoading: updateRoleMutation.isLoading,\n      onFinish: values => updateRoleMutation.mutateAsync({ ...values,\n        id\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(RoleUpdatePage, \"qKN9ul5MQLTUxgYQpR28U8LCG+U=\", false, function () {\n  return [useNavigate, useParams, useRole, useUpdateRole];\n});\n\n_c = RoleUpdatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleUpdatePage\");","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/permission/routes/RoleUpdatePage.tsx"],"names":["PageHeader","Spin","useNavigate","useParams","Authorization","PathEnum","UpdateRoleForm","useRole","useUpdateRole","RoleUpdatePage","navigate","id","data","isLoading","updateRoleMutation","config","onSuccess","RolesList","title","payload","isActive","values","mutateAsync"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,IAArB,QAAiC,MAAjC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AAEA,SAASC,aAAT,QAA8B,eAA9B;AAEA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAAA;;AACnC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAASR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBN,OAAO,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAAnC;AAEA,QAAMG,kBAAkB,GAAGN,aAAa,CAAC;AACxCO,IAAAA,MAAM,EAAE;AACPC,MAAAA,SAAS,EAAGJ,IAAD,IAAyB;AACnCF,QAAAA,QAAQ,CAACL,QAAQ,CAACY,SAAV,CAAR;AACA;AAHM;AADgC,GAAD,CAAxC;AAQA,SAAOJ,SAAS,gBACf,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UADe,gBAGf,QAAC,aAAD;AAAe,IAAA,aAAa,EAAE,CAAC,YAAD,CAA9B;AAAA,eACE,GADF,eAEC,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,MAAM,IAA1B;AAAgC,MAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,cAAD;AACC,MAAA,aAAa,EAAE;AACdK,QAAAA,KAAK,EAAEN,IAAF,aAAEA,IAAF,qCAAEA,IAAI,CAAEA,IAAR,qEAAE,WAAYO,OAAd,uDAAE,mBAAqBD,KADd;AAEdE,QAAAA,QAAQ,EAAER,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,uEAAE,YAAYO,OAAd,wDAAE,oBAAqBC;AAFjB,OADhB;AAKC,MAAA,SAAS,EAAEN,kBAAkB,CAACD,SAL/B;AAMC,MAAA,QAAQ,EAAGQ,MAAD,IAAYP,kBAAkB,CAACQ,WAAnB,CAA+B,EAAE,GAAGD,MAAL;AAAaV,QAAAA;AAAb,OAA/B;AANvB;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UAHD;AAgBA,CA7BM;;GAAMF,c;UACKP,W,EACFC,S,EACaI,O,EAEDC,a;;;KALfC,c","sourcesContent":["import { PageHeader, Spin } from \"antd\"\nimport { useNavigate, useParams } from \"react-router-dom\"\n\nimport { Authorization } from \"@modules/auth\"\nimport { AxiosResponse } from \"axios\"\nimport { PathEnum } from \"@shared/enums\"\nimport UpdateRoleForm from \"../components/UpdateRoleForm\"\nimport { useRole } from \"../hooks/useRole\"\nimport { useUpdateRole } from \"../hooks/useUpdateRole\"\n\nexport const RoleUpdatePage = () => {\n\tconst navigate = useNavigate()\n\tconst { id } = useParams()\n\tconst { data, isLoading } = useRole({ id })\n\n\tconst updateRoleMutation = useUpdateRole({\n\t\tconfig: {\n\t\t\tonSuccess: (data: AxiosResponse) => {\n\t\t\t\tnavigate(PathEnum.RolesList)\n\t\t\t},\n\t\t},\n\t})\n\n\treturn isLoading ? (\n\t\t<Spin />\n\t) : (\n\t\t<Authorization allowedAccess={[\"UserModify\"]}>\n\t\t\t{\" \"}\n\t\t\t<PageHeader onBack={() => null} title=\"Update User\" />\n\t\t\t<UpdateRoleForm\n\t\t\t\tinitialValues={{\n\t\t\t\t\ttitle: data?.data?.payload?.title,\n\t\t\t\t\tisActive: data?.data?.payload?.isActive,\n\t\t\t\t}}\n\t\t\t\tisLoading={updateRoleMutation.isLoading}\n\t\t\t\tonFinish={(values) => updateRoleMutation.mutateAsync({ ...values, id })}\n\t\t\t/>\n\t\t</Authorization>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}