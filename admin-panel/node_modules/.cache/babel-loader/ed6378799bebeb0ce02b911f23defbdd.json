{"ast":null,"code":"var _jsxFileName = \"/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/pet/components/PetTypeList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Popconfirm, Space, Table } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Paths } from \"@shared/enums\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAllPetType } from \"../hooks/useAllPetType\";\nimport { useDeletePetType } from \"../hooks/useDeletePetType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PetTypeList = () => {\n  _s();\n\n  var _data$data, _data$data$payload, _data$data2, _data$data3;\n\n  const navigate = useNavigate();\n  const [page, setPage] = useState(1);\n  const deletePetTypeMutation = useDeletePetType();\n  const {\n    data,\n    isLoading\n  } = useAllPetType({\n    options: {\n      page: page,\n      take: 10\n    }\n  });\n  const dataSource = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$payload = _data$data.payload) === null || _data$data$payload === void 0 ? void 0 : _data$data$payload.map(x => ({\n    id: x.id,\n    name: x.name,\n    isActive: x.isActive.toString()\n  }));\n  console.log(data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.payload);\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Is Active\",\n    dataIndex: \"isActive\",\n    key: \"isActive\"\n  }, {\n    title: \"Action\",\n    dataIndex: \"id\",\n    key: \"id\",\n    render: id => /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => navigate(`${Paths.PetTypeUpdate}/${id}`),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n        okButtonProps: {\n          loading: false\n        },\n        title: \"Are you sure to delete this task?\",\n        onConfirm: () => deletePetTypeMutation.mutate(id),\n        okText: \"Yes\",\n        cancelText: \"No\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          danger: true,\n          type: \"primary\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: dataSource,\n    loading: isLoading,\n    pagination: {\n      pageSize: 10,\n      total: data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.total,\n      onChange: page => {\n        setPage(page);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PetTypeList, \"GIXtpxDllBsnvncZ+0OMG9aZ5aQ=\", false, function () {\n  return [useNavigate, useDeletePetType, useAllPetType];\n});\n\n_c = PetTypeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PetTypeList\");","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/pet/components/PetTypeList.tsx"],"names":["Button","Popconfirm","Space","Table","React","useState","Paths","useNavigate","useAllPetType","useDeletePetType","PetTypeList","navigate","page","setPage","deletePetTypeMutation","data","isLoading","options","take","dataSource","payload","map","x","id","name","isActive","toString","console","log","columns","title","dataIndex","key","render","PetTypeUpdate","loading","mutate","pageSize","total","onChange"],"mappings":"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","sourcesContent":["import { Button, Popconfirm, Space, Table } from \"antd\"\nimport React, { useState } from \"react\"\n\nimport { IFPetBreeds } from \"@shared/interfaces/petBreeds.interface\"\nimport { Paths } from \"@shared/enums\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useAllPetType } from \"../hooks/useAllPetType\"\nimport { useDeletePetType } from \"../hooks/useDeletePetType\"\n\nexport const PetTypeList = () => {\n\tconst navigate = useNavigate()\n\tconst [page, setPage] = useState<number>(1)\n\tconst deletePetTypeMutation = useDeletePetType()\n\n\tconst { data, isLoading } = useAllPetType({\n\t\toptions: {\n\t\t\tpage: page,\n\t\t\ttake: 10,\n\t\t},\n\t})\n\tconst dataSource = data?.data?.payload?.map((x: IFPetBreeds) => ({\n\t\tid: x.id,\n\t\tname: x.name,\n\t\tisActive: x.isActive.toString(),\n\t}))\n\n\tconsole.log(data?.data?.payload)\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: \"Name\",\n\t\t\tdataIndex: \"name\",\n\t\t\tkey: \"name\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Is Active\",\n\t\t\tdataIndex: \"isActive\",\n\t\t\tkey: \"isActive\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Action\",\n\t\t\tdataIndex: \"id\",\n\t\t\tkey: \"id\",\n\t\t\trender: (id: any) => (\n\t\t\t\t<Space>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tonClick={() => navigate(`${Paths.PetTypeUpdate}/${id}`)}>\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttitle=\"Are you sure to delete this task?\"\n\t\t\t\t\t\tonConfirm={() => deletePetTypeMutation.mutate(id)}\n\t\t\t\t\t\tokText=\"Yes\"\n\t\t\t\t\t\tcancelText=\"No\">\n\t\t\t\t\t\t<Button danger type=\"primary\">\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Popconfirm>\n\t\t\t\t</Space>\n\t\t\t),\n\t\t},\n\t]\n\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\tdataSource={dataSource}\n\t\t\tloading={isLoading}\n\t\t\tpagination={{\n\t\t\t\tpageSize: 10,\n\t\t\t\ttotal: data?.data?.total,\n\t\t\t\tonChange: (page: number) => {\n\t\t\t\t\tsetPage(page)\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}