{"ast":null,"code":"import { lsGetData, lsRemoveData, storageSet } from \"../../utils/util-function\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const authSlice = createSlice({\n  name: \"authSlice\",\n  initialState: {\n    isAuth: false,\n    user: null\n  },\n  reducers: {\n    authSuccess: (state, {\n      payload\n    }) => {\n      storageSet(payload.token, \"token\");\n      storageSet(payload.user, \"user\");\n      state.isAuth = true;\n      state.user = payload.user;\n    },\n    authLogout: state => {\n      lsRemoveData(\"token\");\n      lsRemoveData(\"user\");\n      state.isAuth = false;\n      state.user = null;\n    },\n    loadAuth: state => {\n      const getToken = lsGetData(\"token\");\n\n      if (getToken) {\n        state.isAuth = true;\n      } else {\n        state.isAuth = false;\n      }\n    }\n  }\n});\nexport const {\n  authSuccess,\n  authLogout,\n  loadAuth\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@shared/redux/auth/auth.slice.ts"],"names":["lsGetData","lsRemoveData","storageSet","createSlice","authSlice","name","initialState","isAuth","user","reducers","authSuccess","state","payload","token","authLogout","loadAuth","getToken","actions","reducer"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,UAAlC,QAAoD,2BAApD;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACpCE,EAAAA,IAAI,EAAE,WAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACbC,IAAAA,MAAM,EAAE,KADK;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAFsB;AAMpCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAwB;AACpCV,MAAAA,UAAU,CAACU,OAAO,CAACC,KAAT,EAAgB,OAAhB,CAAV;AACAX,MAAAA,UAAU,CAACU,OAAO,CAACJ,IAAT,EAAe,MAAf,CAAV;AACAG,MAAAA,KAAK,CAACJ,MAAN,GAAe,IAAf;AACAI,MAAAA,KAAK,CAACH,IAAN,GAAaI,OAAO,CAACJ,IAArB;AACA,KANQ;AAOTM,IAAAA,UAAU,EAAGH,KAAD,IAAW;AACtBV,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACAA,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAU,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACH,IAAN,GAAa,IAAb;AACA,KAZQ;AAaTO,IAAAA,QAAQ,EAAGJ,KAAD,IAAW;AACpB,YAAMK,QAAQ,GAAGhB,SAAS,CAAC,OAAD,CAA1B;;AACA,UAAIgB,QAAJ,EAAc;AACbL,QAAAA,KAAK,CAACJ,MAAN,GAAe,IAAf;AACA,OAFD,MAEO;AACNI,QAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACA;AACD;AApBQ;AAN0B,CAAD,CAA7B;AA6BP,OAAO,MAAM;AAAEG,EAAAA,WAAF;AAAeI,EAAAA,UAAf;AAA2BC,EAAAA;AAA3B,IAAwCX,SAAS,CAACa,OAAxD;AACP,eAAeb,SAAS,CAACc,OAAzB","sourcesContent":["import { lsGetData, lsRemoveData, storageSet } from \"../../utils/util-function\"\n\nimport { createSlice } from \"@reduxjs/toolkit\"\n\nexport const authSlice = createSlice({\n\tname: \"authSlice\",\n\tinitialState: {\n\t\tisAuth: false,\n\t\tuser: null,\n\t},\n\treducers: {\n\t\tauthSuccess: (state, { payload }) => {\n\t\t\tstorageSet(payload.token, \"token\")\n\t\t\tstorageSet(payload.user, \"user\")\n\t\t\tstate.isAuth = true\n\t\t\tstate.user = payload.user\n\t\t},\n\t\tauthLogout: (state) => {\n\t\t\tlsRemoveData(\"token\")\n\t\t\tlsRemoveData(\"user\")\n\t\t\tstate.isAuth = false\n\t\t\tstate.user = null\n\t\t},\n\t\tloadAuth: (state) => {\n\t\t\tconst getToken = lsGetData(\"token\")\n\t\t\tif (getToken) {\n\t\t\t\tstate.isAuth = true\n\t\t\t} else {\n\t\t\t\tstate.isAuth = false\n\t\t\t}\n\t\t},\n\t},\n})\nexport const { authSuccess, authLogout, loadAuth } = authSlice.actions\nexport default authSlice.reducer\n"]},"metadata":{},"sourceType":"module"}