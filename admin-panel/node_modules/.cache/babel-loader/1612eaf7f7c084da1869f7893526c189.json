{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { queryClient } from \"@shared/config\";\nimport { PermissionTypesService } from \"@shared/services\";\nimport { notification } from \"antd\";\nimport { useMutation } from \"react-query\";\nexport const useDeletePermissionType = ({\n  config\n}) => {\n  _s();\n\n  return useMutation({\n    onMutate: async deletedPermissionType => {\n      await queryClient.cancelQueries(\"userPermissionTypeList\");\n      const previousPermissionType = queryClient.getQueryData(\"userPermissionTypeList\");\n      queryClient.setQueryData(\"userPermissionTypeList\", previousPermissionType === null || previousPermissionType === void 0 ? void 0 : previousPermissionType.filter(pt => {\n        return pt.id !== deletedPermissionType;\n      }));\n      return {\n        previousPermissionType\n      };\n    },\n    onError: (_, __, context) => {\n      if (context === null || context === void 0 ? void 0 : context.previousUsers) {\n        queryClient.setQueryData(\"userPermissionTypeList\", context.previousUsers);\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"userPermissionTypeList\");\n      notification.success({\n        type: \"success\",\n        message: \"Permission type deleted\"\n      });\n    },\n    ...config,\n    mutationFn: PermissionTypesService.delete\n  });\n};\n\n_s(useDeletePermissionType, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/permission/hooks/useDeletePermissionType.ts"],"names":["queryClient","PermissionTypesService","notification","useMutation","useDeletePermissionType","config","onMutate","deletedPermissionType","cancelQueries","previousPermissionType","getQueryData","setQueryData","filter","pt","id","onError","_","__","context","previousUsers","onSuccess","invalidateQueries","success","type","message","mutationFn","delete"],"mappings":";;AAAA,SAAsBA,WAAtB,QAAyC,gBAAzC;AAEA,SAASC,sBAAT,QAAuC,kBAAvC;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAMA,OAAO,MAAMC,uBAAuB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAwC;AAAA;;AAE9E,SAAOF,WAAW,CAAC;AAClBG,IAAAA,QAAQ,EAAE,MAAOC,qBAAP,IAAsC;AACtC,YAAMP,WAAW,CAACQ,aAAZ,CAA0B,wBAA1B,CAAN;AACA,YAAMC,sBAAsB,GAAGT,WAAW,CAACU,YAAZ,CAAgC,wBAAhC,CAA/B;AACAV,MAAAA,WAAW,CAACW,YAAZ,CACI,wBADJ,EAEIF,sBAFJ,aAEIA,sBAFJ,uBAEIA,sBAAsB,CAAEG,MAAxB,CAAgCC,EAAD,IAAQ;AACnC,eAAOA,EAAE,CAACC,EAAH,KAAUP,qBAAjB;AACH,OAFD,CAFJ;AAOA,aAAO;AAAEE,QAAAA;AAAF,OAAP;AACH,KAZW;AAaZM,IAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,EAAJ,EAAQC,OAAR,KAAyB;AAC9B,UAAIA,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEC,aAAb,EAA4B;AACxBnB,QAAAA,WAAW,CAACW,YAAZ,CAAyB,wBAAzB,EAAmDO,OAAO,CAACC,aAA3D;AACH;AACJ,KAjBW;AAkBZC,IAAAA,SAAS,EAAE,MAAM;AACbpB,MAAAA,WAAW,CAACqB,iBAAZ,CAA8B,wBAA9B;AACAnB,MAAAA,YAAY,CAACoB,OAAb,CAAqB;AACjBC,QAAAA,IAAI,EAAE,SADW;AAEjBC,QAAAA,OAAO,EAAE;AAFQ,OAArB;AAIH,KAxBW;AAyBlB,OAAGnB,MAzBe;AA0BlBoB,IAAAA,UAAU,EAAExB,sBAAsB,CAACyB;AA1BjB,GAAD,CAAlB;AA4BA,CA9BM;;GAAMtB,uB;UAELD,W","sourcesContent":["import { QueryConfig, queryClient } from \"@shared/config\"\n\nimport { PermissionTypesService } from \"@shared/services\"\nimport { notification } from \"antd\"\nimport { useMutation } from \"react-query\"\n\ntype PermissionTypeDeleteType = {\n\tconfig?: QueryConfig<typeof PermissionTypesService.delete>\n}\n\nexport const useDeletePermissionType = ({config}: PermissionTypeDeleteType) => {\n\t\n\treturn useMutation({\n\t\tonMutate: async (deletedPermissionType: any) => {\n            await queryClient.cancelQueries(\"userPermissionTypeList\")\n            const previousPermissionType = queryClient.getQueryData<any[]>(\"userPermissionTypeList\")\n            queryClient.setQueryData(\n                \"userPermissionTypeList\",\n                previousPermissionType?.filter((pt) => {\n                    return pt.id !== deletedPermissionType\n                })\n            )\n\n            return { previousPermissionType }\n        },\n        onError: (_, __, context: any) => {\n            if (context?.previousUsers) {\n                queryClient.setQueryData(\"userPermissionTypeList\", context.previousUsers)\n            }\n        },\n        onSuccess: () => {\n            queryClient.invalidateQueries(\"userPermissionTypeList\")\n            notification.success({\n                type: \"success\",\n                message: \"Permission type deleted\",\n            })\n        },\n\t\t...config,\n\t\tmutationFn: PermissionTypesService.delete,\n\t})\n}"]},"metadata":{},"sourceType":"module"}