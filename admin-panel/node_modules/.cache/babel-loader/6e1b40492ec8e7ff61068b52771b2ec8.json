{"ast":null,"code":"import _objectSpread from\"/home/jobayer/Documents/@poshapets/poshapets-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{PageHeader,Spin}from\"antd\";import{useNavigate,useParams}from\"react-router-dom\";import{Authorization}from\"@modules/auth\";import{Paths}from\"@shared/enums\";import PermissionUpdateForm from\"../components/PermissionUpdateForm\";import{usePermission}from\"../hooks/usePermission\";import{useUpdatePermission}from\"../hooks/useUpdatePermission\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PermissionsUpdatePage=function PermissionsUpdatePage(){var _data$data,_data$data$payload;var navigate=useNavigate();var _useParams=useParams(),id=_useParams.id;var _usePermission=usePermission({id:id}),data=_usePermission.data,isLoading=_usePermission.isLoading;var updatePermissionMutation=useUpdatePermission({config:{onSuccess:function onSuccess(data){navigate(Paths.PermissionsList);}}});return isLoading?/*#__PURE__*/_jsx(Spin,{}):/*#__PURE__*/_jsxs(Authorization,{allowedAccess:[\"PermissionModify\"],children:[/*#__PURE__*/_jsx(PageHeader,{onBack:function onBack(){return null;},title:\"Update Permission\"}),/*#__PURE__*/_jsx(PermissionUpdateForm,{initialValues:{title:data===null||data===void 0?void 0:(_data$data=data.data)===null||_data$data===void 0?void 0:(_data$data$payload=_data$data.payload)===null||_data$data$payload===void 0?void 0:_data$data$payload.title},isLoading:updatePermissionMutation.isLoading,onFinish:function onFinish(values){return updatePermissionMutation.mutateAsync(_objectSpread(_objectSpread({},values),{},{id:id}));}})]});};export default PermissionsUpdatePage;","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/permission/routes/PermissionsUpdatePage.tsx"],"names":["PageHeader","Spin","useNavigate","useParams","Authorization","Paths","PermissionUpdateForm","usePermission","useUpdatePermission","PermissionsUpdatePage","navigate","id","data","isLoading","updatePermissionMutation","config","onSuccess","PermissionsList","title","payload","values","mutateAsync"],"mappings":"wKAAA,OAASA,UAAT,CAAqBC,IAArB,KAAiC,MAAjC,CACA,OAASC,WAAT,CAAsBC,SAAtB,KAAuC,kBAAvC,CAEA,OAASC,aAAT,KAA8B,eAA9B,CAEA,OAASC,KAAT,KAAsB,eAAtB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,oCAAjC,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,OAASC,mBAAT,KAAoC,8BAApC,C,wFAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,mCAEhC,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CACH,eAAeC,SAAS,EAAxB,CAAQQ,EAAR,YAAQA,EAAR,CACA,mBAA4BJ,aAAa,CAAC,CAAEI,EAAE,CAAFA,EAAF,CAAD,CAAzC,CAAQC,IAAR,gBAAQA,IAAR,CAAcC,SAAd,gBAAcA,SAAd,CAEA,GAAMC,CAAAA,wBAAwB,CAAGN,mBAAmB,CAAC,CACpDO,MAAM,CAAE,CACPC,SAAS,CAAE,mBAACJ,IAAD,CAAyB,CACnCF,QAAQ,CAACL,KAAK,CAACY,eAAP,CAAR,CACA,CAHM,CAD4C,CAAD,CAApD,CAQG,MAAOJ,CAAAA,SAAS,cAClB,KAAC,IAAD,IADkB,cAGlB,MAAC,aAAD,EAAe,aAAa,CAAE,CAAC,kBAAD,CAA9B,wBACC,KAAC,UAAD,EAAY,MAAM,CAAE,wBAAM,KAAN,EAApB,CAAgC,KAAK,CAAC,mBAAtC,EADD,cAEC,KAAC,oBAAD,EACC,aAAa,CAAE,CACdK,KAAK,CAAEN,IAAF,SAAEA,IAAF,6BAAEA,IAAI,CAAEA,IAAR,yDAAE,WAAYO,OAAd,6CAAE,mBAAqBD,KADd,CADhB,CAIC,SAAS,CAAEJ,wBAAwB,CAACD,SAJrC,CAKC,QAAQ,CAAE,kBAACO,MAAD,QAAYN,CAAAA,wBAAwB,CAACO,WAAzB,gCAA0CD,MAA1C,MAAkDT,EAAE,CAAFA,EAAlD,GAAZ,EALX,EAFD,GAHE,CAcH,CA5BD,CA8BA,cAAeF,CAAAA,qBAAf","sourcesContent":["import { PageHeader, Spin } from \"antd\"\nimport { useNavigate, useParams } from \"react-router-dom\"\n\nimport { Authorization } from \"@modules/auth\"\nimport { AxiosResponse } from \"axios\"\nimport { Paths } from \"@shared/enums\"\nimport PermissionUpdateForm from \"../components/PermissionUpdateForm\"\nimport { usePermission } from \"../hooks/usePermission\"\nimport { useUpdatePermission } from \"../hooks/useUpdatePermission\"\n\nconst PermissionsUpdatePage = () => {\n\n    const navigate = useNavigate()\n\tconst { id } = useParams()\n\tconst { data, isLoading } = usePermission({ id })\n\n\tconst updatePermissionMutation = useUpdatePermission({\n\t\tconfig: {\n\t\t\tonSuccess: (data: AxiosResponse) => {\n\t\t\t\tnavigate(Paths.PermissionsList)\n\t\t\t},\n\t\t},\n\t})\n\n    return isLoading ? (\n\t\t<Spin />\n\t) : (\n\t\t<Authorization allowedAccess={[\"PermissionModify\"]}>\n\t\t\t<PageHeader onBack={() => null} title=\"Update Permission\" />\n\t\t\t<PermissionUpdateForm\n\t\t\t\tinitialValues={{\n\t\t\t\t\ttitle: data?.data?.payload?.title,\n\t\t\t\t}}\n\t\t\t\tisLoading={updatePermissionMutation.isLoading}\n\t\t\t\tonFinish={(values) => updatePermissionMutation.mutateAsync({ ...values, id })}\n\t\t\t/>\n\t\t</Authorization>\n\t)\n};\n\nexport default PermissionsUpdatePage;"]},"metadata":{},"sourceType":"module"}