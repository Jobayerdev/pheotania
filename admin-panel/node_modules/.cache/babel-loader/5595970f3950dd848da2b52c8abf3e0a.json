{"ast":null,"code":"import { CoreAxiosInstance } from \"@shared/config\";\nimport { concatFilterQuery } from \"@shared/utils\";\nconst END_POINT = \"/users/\";\nexport const UsersService = {\n  create(payload) {\n    return CoreAxiosInstance.post(END_POINT, payload);\n  },\n\n  filter(options) {\n    return CoreAxiosInstance.get(`${END_POINT}?${concatFilterQuery(options)}`);\n  },\n\n  filterSingle(payload) {\n    return CoreAxiosInstance.get(`${END_POINT}${payload}`);\n  },\n\n  update(payload) {\n    const {\n      id,\n      name,\n      email,\n      phoneNumber,\n      type,\n      gender,\n      address\n    } = payload;\n    return CoreAxiosInstance.put(`${END_POINT}${id}`, {\n      name,\n      email,\n      phoneNumber,\n      type,\n      gender,\n      address\n    });\n  }\n\n};","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@shared/services/users.service.ts"],"names":["CoreAxiosInstance","concatFilterQuery","END_POINT","UsersService","create","payload","post","filter","options","get","filterSingle","update","id","name","email","phoneNumber","type","gender","address","put"],"mappings":"AAEA,SAASA,iBAAT,QAAkC,gBAAlC;AAEA,SAASC,iBAAT,QAAkC,eAAlC;AAEA,MAAMC,SAAiB,GAAG,SAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,CAACC,OAAD,EAAuB;AAC3B,WAAOL,iBAAiB,CAACM,IAAlB,CAAuBJ,SAAvB,EAAkCG,OAAlC,CAAP;AACD,GAHyB;;AAI1BE,EAAAA,MAAM,CAACC,OAAD,EAAuB;AAC3B,WAAOR,iBAAiB,CAACS,GAAlB,CAAuB,GAAEP,SAAU,IAAGD,iBAAiB,CAACO,OAAD,CAAU,EAAjE,CAAP;AACD,GANyB;;AAO1BE,EAAAA,YAAY,CAACL,OAAD,EAAkB;AAC5B,WAAOL,iBAAiB,CAACS,GAAlB,CAAuB,GAAEP,SAAU,GAAEG,OAAQ,EAA7C,CAAP;AACD,GATyB;;AAU1BM,EAAAA,MAAM,CAACN,OAAD,EAAuB;AAC3B,UAAM;AAAEO,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA,KAAZ;AAAmBC,MAAAA,WAAnB;AAAgCC,MAAAA,IAAhC;AAAsCC,MAAAA,MAAtC;AAA8CC,MAAAA;AAA9C,QAA0Db,OAAhE;AACA,WAAOL,iBAAiB,CAACmB,GAAlB,CAAuB,GAAEjB,SAAU,GAAEU,EAAG,EAAxC,EAA2C;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,WAAf;AAA4BC,MAAAA,IAA5B;AAAkCC,MAAAA,MAAlC;AAA0CC,MAAAA;AAA1C,KAA3C,CAAP;AACD;;AAbyB,CAArB","sourcesContent":["import { IBaseFilter, ICreateUser } from \"@shared/interfaces\";\n\nimport { CoreAxiosInstance } from \"@shared/config\";\nimport { IUpdateUser } from \"./../interfaces/user.interfaces\";\nimport { concatFilterQuery } from \"@shared/utils\";\n\nconst END_POINT: string = \"/users/\";\n\nexport const UsersService = {\n  create(payload: ICreateUser) {\n    return CoreAxiosInstance.post(END_POINT, payload);\n  },\n  filter(options: IBaseFilter) {\n    return CoreAxiosInstance.get(`${END_POINT}?${concatFilterQuery(options)}`);\n  },\n  filterSingle(payload: string) {\n    return CoreAxiosInstance.get(`${END_POINT}${payload}`)\n  },\n  update(payload: IUpdateUser) {\n    const { id, name, email, phoneNumber, type, gender, address } = payload;\n    return CoreAxiosInstance.put(`${END_POINT}${id}`, { name, email, phoneNumber, type, gender, address } );\n  },\n};\n"]},"metadata":{},"sourceType":"module"}