{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { queryClient } from \"@shared/config\";\nimport { PermissionsService } from \"@shared/services\";\nimport { notification } from \"antd\";\nimport { useMutation } from \"react-query\";\nexport const useDeletePermission = ({\n  config\n}) => {\n  _s();\n\n  return useMutation({\n    onMutate: async deletedPermission => {\n      await queryClient.cancelQueries(\"permissionsList\");\n      const previousPermissions = queryClient.getQueryData(\"permissionsList\");\n      queryClient.setQueryData(\"permissionsList\", previousPermissions === null || previousPermissions === void 0 ? void 0 : previousPermissions.filter(permission => {\n        return permission.id !== deletedPermission;\n      }));\n      return {\n        previousPermissions\n      };\n    },\n    onError: (_, __, context) => {\n      if (context === null || context === void 0 ? void 0 : context.previousUsers) {\n        queryClient.setQueryData(\"permissionsList\", context.previousUsers);\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"permissionsList\");\n      notification.success({\n        type: \"success\",\n        message: \"Permission Deleted\"\n      });\n    },\n    ...config,\n    mutationFn: PermissionsService.delete\n  });\n};\n\n_s(useDeletePermission, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"sources":["/home/jobayer/Documents/@projects-backlogs/Geflex/admin-panel/src/@modules/permission/hooks/useDeletePermission.ts"],"names":["queryClient","PermissionsService","notification","useMutation","useDeletePermission","config","onMutate","deletedPermission","cancelQueries","previousPermissions","getQueryData","setQueryData","filter","permission","id","onError","_","__","context","previousUsers","onSuccess","invalidateQueries","success","type","message","mutationFn","delete"],"mappings":";;AAAA,SAAsBA,WAAtB,QAAyC,gBAAzC;AAEA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAMA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoC;AAAA;;AAEtE,SAAOF,WAAW,CAAC;AAClBG,IAAAA,QAAQ,EAAE,MAAOC,iBAAP,IAAkC;AAClC,YAAMP,WAAW,CAACQ,aAAZ,CAA0B,iBAA1B,CAAN;AACA,YAAMC,mBAAmB,GAAGT,WAAW,CAACU,YAAZ,CAAgC,iBAAhC,CAA5B;AACAV,MAAAA,WAAW,CAACW,YAAZ,CACI,iBADJ,EAEIF,mBAFJ,aAEIA,mBAFJ,uBAEIA,mBAAmB,CAAEG,MAArB,CAA6BC,UAAD,IAAgB;AACxC,eAAOA,UAAU,CAACC,EAAX,KAAkBP,iBAAzB;AACH,OAFD,CAFJ;AAOA,aAAO;AAAEE,QAAAA;AAAF,OAAP;AACH,KAZW;AAaZM,IAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,EAAJ,EAAQC,OAAR,KAAyB;AAC9B,UAAIA,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEC,aAAb,EAA4B;AACxBnB,QAAAA,WAAW,CAACW,YAAZ,CAAyB,iBAAzB,EAA4CO,OAAO,CAACC,aAApD;AACH;AACJ,KAjBW;AAkBZC,IAAAA,SAAS,EAAE,MAAM;AACbpB,MAAAA,WAAW,CAACqB,iBAAZ,CAA8B,iBAA9B;AACAnB,MAAAA,YAAY,CAACoB,OAAb,CAAqB;AACjBC,QAAAA,IAAI,EAAE,SADW;AAEjBC,QAAAA,OAAO,EAAE;AAFQ,OAArB;AAIH,KAxBW;AAyBlB,OAAGnB,MAzBe;AA0BlBoB,IAAAA,UAAU,EAAExB,kBAAkB,CAACyB;AA1Bb,GAAD,CAAlB;AA4BA,CA9BM;;GAAMtB,mB;UAELD,W","sourcesContent":["import { QueryConfig, queryClient } from \"@shared/config\"\n\nimport { PermissionsService } from \"@shared/services\"\nimport { notification } from \"antd\"\nimport { useMutation } from \"react-query\"\n\ntype PermissionDeleteType = {\n\tconfig?: QueryConfig<typeof PermissionsService.delete>\n}\n\nexport const useDeletePermission = ({config}: PermissionDeleteType) => {\n\t\n\treturn useMutation({\n\t\tonMutate: async (deletedPermission: any) => {\n            await queryClient.cancelQueries(\"permissionsList\")\n            const previousPermissions = queryClient.getQueryData<any[]>(\"permissionsList\")\n            queryClient.setQueryData(\n                \"permissionsList\",\n                previousPermissions?.filter((permission) => {\n                    return permission.id !== deletedPermission\n                })\n            )\n\n            return { previousPermissions }\n        },\n        onError: (_, __, context: any) => {\n            if (context?.previousUsers) {\n                queryClient.setQueryData(\"permissionsList\", context.previousUsers)\n            }\n        },\n        onSuccess: () => {\n            queryClient.invalidateQueries(\"permissionsList\")\n            notification.success({\n                type: \"success\",\n                message: \"Permission Deleted\",\n            })\n        },\n\t\t...config,\n\t\tmutationFn: PermissionsService.delete,\n\t})\n}"]},"metadata":{},"sourceType":"module"}