{"ast":null,"code":"import { CoreAxiosInstance } from \"./../config/axios/core-axios-instantance\";\nimport { concatFilterQuery } from \"@shared/utils\";\nconst END_POINT = \"/petBreeds/\";\nexport const PetBreedsService = {\n  create(payload) {\n    console.log(payload);\n    return CoreAxiosInstance.post(END_POINT, payload);\n  },\n\n  filter(options) {\n    return CoreAxiosInstance.get(`${END_POINT}?${concatFilterQuery(options)}`);\n  },\n\n  filterSingle(payload) {\n    return CoreAxiosInstance.get(`${END_POINT}${payload}`);\n  },\n\n  update(payload) {\n    const {\n      id,\n      name\n    } = payload;\n    return CoreAxiosInstance.put(`${END_POINT}${id}`, {\n      name\n    });\n  },\n\n  delete(id) {\n    return CoreAxiosInstance.delete(`${END_POINT}${id}`);\n  }\n\n};","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@shared/services/petBreeds.service.ts"],"names":["CoreAxiosInstance","concatFilterQuery","END_POINT","PetBreedsService","create","payload","console","log","post","filter","options","get","filterSingle","update","id","name","put","delete"],"mappings":"AAEA,SAASA,iBAAT,QAAkC,0CAAlC;AACA,SAASC,iBAAT,QAAkC,eAAlC;AAMA,MAAMC,SAAiB,GAAG,aAA1B;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,MAAM,CAACC,OAAD,EAA6B;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAOL,iBAAiB,CAACQ,IAAlB,CAAuBN,SAAvB,EAAkCG,OAAlC,CAAP;AACD,GAJ6B;;AAK9BI,EAAAA,MAAM,CAACC,OAAD,EAAuB;AAC3B,WAAOV,iBAAiB,CAACW,GAAlB,CAAuB,GAAET,SAAU,IAAGD,iBAAiB,CAACS,OAAD,CAAU,EAAjE,CAAP;AACD,GAP6B;;AAQ9BE,EAAAA,YAAY,CAACP,OAAD,EAAkB;AAC5B,WAAOL,iBAAiB,CAACW,GAAlB,CAAuB,GAAET,SAAU,GAAEG,OAAQ,EAA7C,CAAP;AACD,GAV6B;;AAW9BQ,EAAAA,MAAM,CAACR,OAAD,EAA6B;AACjC,UAAM;AAAES,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAeV,OAArB;AACA,WAAOL,iBAAiB,CAACgB,GAAlB,CAAuB,GAAEd,SAAU,GAAEY,EAAG,EAAxC,EAA2C;AAChDC,MAAAA;AADgD,KAA3C,CAAP;AAGD,GAhB6B;;AAiB9BE,EAAAA,MAAM,CAACH,EAAD,EAAa;AACjB,WAAOd,iBAAiB,CAACiB,MAAlB,CAA0B,GAAEf,SAAU,GAAEY,EAAG,EAA3C,CAAP;AACD;;AAnB6B,CAAzB","sourcesContent":["import { IBaseFilter } from \"@shared/interfaces\";\n\nimport { CoreAxiosInstance } from \"./../config/axios/core-axios-instantance\";\nimport { concatFilterQuery } from \"@shared/utils\";\nimport {\n  IFCreatePetBreeds,\n  IFUpdatePetBreeds,\n} from \"@shared/interfaces/petBreeds.interface\";\n\nconst END_POINT: string = \"/petBreeds/\";\n\nexport const PetBreedsService = {\n  create(payload: IFCreatePetBreeds) {\n    console.log(payload);\n    return CoreAxiosInstance.post(END_POINT, payload);\n  },\n  filter(options: IBaseFilter) {\n    return CoreAxiosInstance.get(`${END_POINT}?${concatFilterQuery(options)}`);\n  },\n  filterSingle(payload: string) {\n    return CoreAxiosInstance.get(`${END_POINT}${payload}`);\n  },\n  update(payload: IFUpdatePetBreeds) {\n    const { id, name } = payload;\n    return CoreAxiosInstance.put(`${END_POINT}${id}`, {\n      name,\n    });\n  },\n  delete(id: string) {\n    return CoreAxiosInstance.delete(`${END_POINT}${id}`);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}