{"ast":null,"code":"var _jsxFileName = \"/home/jobayer/Documents/@projects-backlogs/Geflex/admin-panel/src/@modules/permission/components/PermissionTypeList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Popconfirm, Space, Table } from \"antd\";\nimport { Paths } from \"@shared/enums\";\nimport { useDeletePermissionType } from \"../hooks/useDeletePermissionType\";\nimport { useNavigate } from \"react-router-dom\";\nimport { usePermissionTypes } from \"../hooks/usePermissionTypes\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PermissionTypeList = () => {\n  _s();\n\n  var _data$data, _data$data$payload, _data$data2;\n\n  const deletePermissionType = useDeletePermissionType({});\n  const navigate = useNavigate();\n  const [page, setPage] = useState(1);\n  const {\n    data,\n    isLoading\n  } = usePermissionTypes({\n    options: {\n      page: page,\n      take: 10\n    }\n  });\n  const dataSource = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$payload = _data$data.payload) === null || _data$data$payload === void 0 ? void 0 : _data$data$payload.map(x => ({\n    title: x.title,\n    id: x.id,\n    isActive: x.isActive.toString()\n  }));\n  const columns = [{\n    title: \"Permission Type\",\n    dataIndex: \"title\",\n    key: \"title\"\n  }, {\n    title: \"Is Active\",\n    dataIndex: \"isActive\",\n    key: \"isActive\"\n  }, {\n    title: \"Action\",\n    dataIndex: \"id\",\n    key: \"id\",\n    render: id => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => navigate(`${Paths.PermissionsTypeUpdate}/${id}`),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"Are you sure to delete this permission type?\",\n        onConfirm: () => deletePermissionType.mutateAsync(id),\n        okText: \"Yes\",\n        cancelText: \"No\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          danger: true,\n          children: \" Delete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: dataSource,\n    loading: isLoading,\n    pagination: {\n      pageSize: 10,\n      total: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.total,\n      onChange: page => {\n        setPage(page);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PermissionTypeList, \"H8thHspMtfV4FbngVn59ePXfkRk=\", false, function () {\n  return [useDeletePermissionType, useNavigate, usePermissionTypes];\n});\n\n_c = PermissionTypeList;\nexport default PermissionTypeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PermissionTypeList\");","map":{"version":3,"sources":["/home/jobayer/Documents/@projects-backlogs/Geflex/admin-panel/src/@modules/permission/components/PermissionTypeList.tsx"],"names":["Button","Popconfirm","Space","Table","Paths","useDeletePermissionType","useNavigate","usePermissionTypes","useState","PermissionTypeList","deletePermissionType","navigate","page","setPage","data","isLoading","options","take","dataSource","payload","map","x","title","id","isActive","toString","columns","dataIndex","key","render","PermissionsTypeUpdate","mutateAsync","pageSize","total","onChange"],"mappings":"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","sourcesContent":["import { Button, Popconfirm, Space, Table } from \"antd\"\n\nimport { IPermissionType } from \"@shared/interfaces\"\nimport { Paths } from \"@shared/enums\"\nimport { useDeletePermissionType } from \"../hooks/useDeletePermissionType\"\nimport { useNavigate } from \"react-router-dom\"\nimport { usePermissionTypes } from \"../hooks/usePermissionTypes\"\nimport { useState } from \"react\"\n\nconst PermissionTypeList = () => {\n\n\tconst deletePermissionType = useDeletePermissionType({})\n\tconst navigate = useNavigate()\n\tconst [page, setPage] = useState<number>(1)\n\n\tconst { data, isLoading } = usePermissionTypes({\n\t\toptions: {\n\t\t\tpage: page,\n\t\t\ttake: 10,\n\t\t},\n\t})\n\t\n\tconst dataSource = data?.data?.payload?.map((x: IPermissionType) => ({\n\t\ttitle: x.title,\n\t\tid: x.id,\n\t\tisActive: x.isActive.toString(),\n\t}));\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: \"Permission Type\",\n\t\t\tdataIndex: \"title\",\n\t\t\tkey: \"title\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Is Active\",\n\t\t\tdataIndex: \"isActive\",\n\t\t\tkey: \"isActive\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Action\",\n\t\t\tdataIndex: \"id\",\n\t\t\tkey: \"id\",\n\t\t\trender: (id: any) => (\n\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t<Button\n                        type=\"primary\"\n                        onClick={() => navigate(`${Paths.PermissionsTypeUpdate}/${id}`)}>\n                        Update\n                    </Button>\n\n\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\ttitle=\"Are you sure to delete this permission type?\"\n\t\t\t\t\t\tonConfirm={() => deletePermissionType.mutateAsync(id)}\n\t\t\t\t\t\tokText=\"Yes\"\n\t\t\t\t\t\tcancelText=\"No\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button type=\"primary\" danger> Delete </Button>\n\t\t\t\t\t</Popconfirm>\n\t\t\t\t</Space>\n\t\t\t),\n\t\t},\n\t]\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\tdataSource={dataSource}\n\t\t\tloading={isLoading}\n\t\t\tpagination={{\n\t\t\t\tpageSize: 10,\n\t\t\t\ttotal: data?.data?.total,\n\t\t\t\tonChange: (page: number) => {\n\t\t\t\t\tsetPage(page)\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t)\n}\nexport default PermissionTypeList;\n"]},"metadata":{},"sourceType":"module"}