{"ast":null,"code":"var _jsxFileName = \"/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/users/routes/UpdateUserPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Authorization } from \"@modules/auth\";\nimport { PathEnum } from \"@shared/enums\";\nimport { PageHeader, Spin } from \"antd\";\nimport React from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { UpdateForm } from \"../components/elements/UpdateForm\";\nimport { useUpdateUser } from \"../hooks/useUpdateUser\";\nimport { useUser } from \"../hooks/useUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateUserPage = () => {\n  _s();\n\n  var _data$data, _data$data$payload, _data$data2, _data$data3, _data$data4, _data$data5, _data$data6, _data$data7;\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    isLoading\n  } = useUser({\n    id\n  });\n  const updateUserMutation = useUpdateUser({\n    config: {\n      onSuccess: data => {\n        navigate(PathEnum.UserList);\n      }\n    }\n  });\n  console.log(updateUserMutation);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(Authorization, {\n    allowedAccess: [\"UserModify\"],\n    children: [\" \", /*#__PURE__*/_jsxDEV(PageHeader, {\n      onBack: () => null,\n      title: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      initialValues: {\n        name: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$payload = _data$data.payload) === null || _data$data$payload === void 0 ? void 0 : _data$data$payload.name,\n        email: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.payload.email,\n        phoneNumber: data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.payload.phoneNumber,\n        password: data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.payload.password,\n        gender: data === null || data === void 0 ? void 0 : (_data$data5 = data.data) === null || _data$data5 === void 0 ? void 0 : _data$data5.payload.gender,\n        address: data === null || data === void 0 ? void 0 : (_data$data6 = data.data) === null || _data$data6 === void 0 ? void 0 : _data$data6.payload.address,\n        type: data === null || data === void 0 ? void 0 : (_data$data7 = data.data) === null || _data$data7 === void 0 ? void 0 : _data$data7.payload.type\n      },\n      isLoading: updateUserMutation.isLoading,\n      onFinish: values => updateUserMutation.mutateAsync({ ...values,\n        id\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateUserPage, \"MgpTWBhZOohQmAlFPhi4HywUb/M=\", false, function () {\n  return [useNavigate, useParams, useUser, useUpdateUser];\n});\n\n_c = UpdateUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUserPage\");","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/users/routes/UpdateUserPage.tsx"],"names":["Authorization","PathEnum","PageHeader","Spin","React","useParams","useNavigate","UpdateForm","useUpdateUser","useUser","UpdateUserPage","navigate","id","data","isLoading","updateUserMutation","config","onSuccess","UserList","console","log","name","payload","email","phoneNumber","password","gender","address","type","values","mutateAsync"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,MAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAAA;;AAClC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASP,SAAS,EAAxB;AACA,QAAM;AAACQ,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAoBL,OAAO,CAAC;AAACG,IAAAA;AAAD,GAAD,CAAjC;AAEA,QAAMG,kBAAkB,GAAGP,aAAa,CAAC;AACvCQ,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAGJ,IAAD,IAAyB;AAClCF,QAAAA,QAAQ,CAACV,QAAQ,CAACiB,QAAV,CAAR;AACD;AAHK;AAD+B,GAAD,CAAxC;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,kBAAZ;AAEA,SAAOD,SAAS,gBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBACd,QAAC,aAAD;AAAe,IAAA,aAAa,EAAE,CAAC,YAAD,CAA9B;AAAA,eACG,GADH,eAEE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,MAAM,IAA1B;AAAgC,MAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AACE,MAAA,aAAa,EAAE;AACbO,QAAAA,IAAI,EAAER,IAAF,aAAEA,IAAF,qCAAEA,IAAI,CAAEA,IAAR,qEAAE,WAAYS,OAAd,uDAAE,mBAAqBD,IADd;AAEbE,QAAAA,KAAK,EAAEV,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBC,KAFd;AAGbC,QAAAA,WAAW,EAAEX,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBE,WAHpB;AAIbC,QAAAA,QAAQ,EAAEZ,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBG,QAJjB;AAKbC,QAAAA,MAAM,EAAEb,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBI,MALf;AAMbC,QAAAA,OAAO,EAAEd,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBK,OANhB;AAObC,QAAAA,IAAI,EAAEf,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBM;AAPb,OADjB;AAUE,MAAA,SAAS,EAAEb,kBAAkB,CAACD,SAVhC;AAWE,MAAA,QAAQ,EAAGe,MAAD,IAAYd,kBAAkB,CAACe,WAAnB,CAA+B,EAAC,GAAGD,MAAJ;AAAYjB,QAAAA;AAAZ,OAA/B;AAXxB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAlCM;;GAAMF,c;UACMJ,W,EACFD,S,EACWI,O,EAECD,a;;;KALhBE,c","sourcesContent":["import { Authorization } from \"@modules/auth\";\nimport { PathEnum } from \"@shared/enums\";\nimport { PageHeader, Spin } from \"antd\";\nimport { AxiosResponse } from \"axios\";\nimport React from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { UpdateForm } from \"../components/elements/UpdateForm\";\nimport { useUpdateUser } from \"../hooks/useUpdateUser\";\nimport { useUser } from \"../hooks/useUser\";\n\nexport const UpdateUserPage = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const {data, isLoading} = useUser({id});\n\n  const updateUserMutation = useUpdateUser({\n    config: {\n      onSuccess: (data: AxiosResponse) => {\n        navigate(PathEnum.UserList);\n      },\n    },\n  });\n\n  console.log(updateUserMutation);\n\n  return isLoading ? <Spin /> : (\n    <Authorization allowedAccess={[\"UserModify\"]}>\n      {\" \"}\n      <PageHeader onBack={() => null} title=\"Update User\" />\n      <UpdateForm\n        initialValues={{\n          name: data?.data?.payload?.name,\n          email: data?.data?.payload.email,\n          phoneNumber: data?.data?.payload.phoneNumber,\n          password: data?.data?.payload.password,\n          gender: data?.data?.payload.gender,\n          address: data?.data?.payload.address,\n          type: data?.data?.payload.type,\n        }}\n        isLoading={updateUserMutation.isLoading}\n        onFinish={(values) => updateUserMutation.mutateAsync({...values, id})}\n      />\n    </Authorization>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}