{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { queryClient } from \"@shared/config\";\nimport { UsersService } from \"@shared/services\";\nimport { notification } from \"antd\";\nimport { useMutation } from \"react-query\";\nexport const useDeleteUser = ({\n  config\n} = {}) => {\n  _s();\n\n  return useMutation({\n    onMutate: async deletedUser => {\n      console.log(\"ðŸš€ ~ file: useDeleteUser.ts ~ line 14 ~ onMutate: ~ deletedUser\", deletedUser);\n      await queryClient.cancelQueries(\"userList\");\n      const previousUsers = queryClient.getQueryData(\"userList\");\n      console.log(\"ðŸš€ ~ file: useDeleteUser.ts ~ line 17 ~ onMutate: ~ previousUsers\", previousUsers);\n      queryClient.setQueryData(\"userList\", previousUsers === null || previousUsers === void 0 ? void 0 : previousUsers.filter(urs => urs.id !== (deletedUser === null || deletedUser === void 0 ? void 0 : deletedUser.id)));\n      return {\n        previousUsers\n      };\n    },\n    onError: (_, __, context) => {\n      if (context === null || context === void 0 ? void 0 : context.previousUsers) {\n        console.log(\"ðŸš€ ~ file: useDeleteUser.ts ~ line 31 ~ onMutate: ~ queryClient\", queryClient);\n        queryClient.setQueryData(\"userList\", context.previousUsers);\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"userList\");\n      notification.success({\n        type: \"success\",\n        message: \"User Deleted\"\n      });\n    },\n    ...config,\n    mutationFn: UsersService.delete\n  });\n};\n\n_s(useDeleteUser, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/users/hooks/useDeleteUser.ts"],"names":["queryClient","UsersService","notification","useMutation","useDeleteUser","config","onMutate","deletedUser","console","log","cancelQueries","previousUsers","getQueryData","setQueryData","filter","urs","id","onError","_","__","context","onSuccess","invalidateQueries","success","type","message","mutationFn","delete"],"mappings":";;AAAA,SAAyBA,WAAzB,QAA4C,gBAA5C;AAEA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAMA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,IAAmC,EAApC,KAA2C;AAAA;;AACvE,SAAOF,WAAW,CAAC;AAClBG,IAAAA,QAAQ,EAAE,MAAOC,WAAP,IAA4B;AACrCC,MAAAA,OAAO,CAACC,GAAR,CACC,iEADD,EAECF,WAFD;AAIA,YAAMP,WAAW,CAACU,aAAZ,CAA0B,UAA1B,CAAN;AAEA,YAAMC,aAAa,GAAGX,WAAW,CAACY,YAAZ,CAAgC,UAAhC,CAAtB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CACC,mEADD,EAECE,aAFD;AAIAX,MAAAA,WAAW,CAACa,YAAZ,CACC,UADD,EAECF,aAFD,aAECA,aAFD,uBAECA,aAAa,CAAEG,MAAf,CAAuBC,GAAD,IAASA,GAAG,CAACC,EAAJ,MAAWT,WAAX,aAAWA,WAAX,uBAAWA,WAAW,CAAES,EAAxB,CAA/B,CAFD;AAKA,aAAO;AAAEL,QAAAA;AAAF,OAAP;AACA,KAnBiB;AAoBlBM,IAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,EAAJ,EAAQC,OAAR,KAAyB;AACjC,UAAIA,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAET,aAAb,EAA4B;AAC3BH,QAAAA,OAAO,CAACC,GAAR,CACC,iEADD,EAECT,WAFD;AAIAA,QAAAA,WAAW,CAACa,YAAZ,CAAyB,UAAzB,EAAqCO,OAAO,CAACT,aAA7C;AACA;AACD,KA5BiB;AA6BlBU,IAAAA,SAAS,EAAE,MAAM;AAChBrB,MAAAA,WAAW,CAACsB,iBAAZ,CAA8B,UAA9B;AACApB,MAAAA,YAAY,CAACqB,OAAb,CAAqB;AACpBC,QAAAA,IAAI,EAAE,SADc;AAEpBC,QAAAA,OAAO,EAAE;AAFW,OAArB;AAIA,KAnCiB;AAoClB,OAAGpB,MApCe;AAqClBqB,IAAAA,UAAU,EAAEzB,YAAY,CAAC0B;AArCP,GAAD,CAAlB;AAuCA,CAxCM;;GAAMvB,a;UACLD,W","sourcesContent":["import { MutationConfig, queryClient } from \"@shared/config\"\n\nimport { UsersService } from \"@shared/services\"\nimport { notification } from \"antd\"\nimport { useMutation } from \"react-query\"\n\ntype UseDeleteUserOptions = {\n\tconfig?: MutationConfig<typeof UsersService.delete>\n}\n\nexport const useDeleteUser = ({ config }: UseDeleteUserOptions = {}) => {\n\treturn useMutation({\n\t\tonMutate: async (deletedUser: any) => {\n\t\t\tconsole.log(\n\t\t\t\t\"ðŸš€ ~ file: useDeleteUser.ts ~ line 14 ~ onMutate: ~ deletedUser\",\n\t\t\t\tdeletedUser\n\t\t\t)\n\t\t\tawait queryClient.cancelQueries(\"userList\")\n\n\t\t\tconst previousUsers = queryClient.getQueryData<any[]>(\"userList\")\n\t\t\tconsole.log(\n\t\t\t\t\"ðŸš€ ~ file: useDeleteUser.ts ~ line 17 ~ onMutate: ~ previousUsers\",\n\t\t\t\tpreviousUsers\n\t\t\t)\n\t\t\tqueryClient.setQueryData(\n\t\t\t\t\"userList\",\n\t\t\t\tpreviousUsers?.filter((urs) => urs.id !== deletedUser?.id)\n\t\t\t)\n\n\t\t\treturn { previousUsers }\n\t\t},\n\t\tonError: (_, __, context: any) => {\n\t\t\tif (context?.previousUsers) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"ðŸš€ ~ file: useDeleteUser.ts ~ line 31 ~ onMutate: ~ queryClient\",\n\t\t\t\t\tqueryClient\n\t\t\t\t)\n\t\t\t\tqueryClient.setQueryData(\"userList\", context.previousUsers)\n\t\t\t}\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tqueryClient.invalidateQueries(\"userList\")\n\t\t\tnotification.success({\n\t\t\t\ttype: \"success\",\n\t\t\t\tmessage: \"User Deleted\",\n\t\t\t})\n\t\t},\n\t\t...config,\n\t\tmutationFn: UsersService.delete,\n\t})\n}\n"]},"metadata":{},"sourceType":"module"}