{"ast":null,"code":"import _regeneratorRuntime from\"/home/jobayer/Documents/@poshapets/poshapets-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/jobayer/Documents/@poshapets/poshapets-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/jobayer/Documents/@poshapets/poshapets-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{queryClient}from\"@shared/config\";import{UsersService}from\"@shared/services\";import{notification}from\"antd\";import{useMutation}from\"react-query\";export var useDeleteUser=function useDeleteUser(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},config=_ref.config;return useMutation(_objectSpread(_objectSpread({onMutate:function(){var _onMutate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(deletedUser){var previousUsers;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return queryClient.cancelQueries(\"userList\");case 2:previousUsers=queryClient.getQueryData(\"userList\");queryClient.setQueryData(\"userList\",previousUsers===null||previousUsers===void 0?void 0:previousUsers.filter(function(urs){return urs.id!==deletedUser;}));return _context.abrupt(\"return\",{previousUsers:previousUsers});case 5:case\"end\":return _context.stop();}}},_callee);}));function onMutate(_x){return _onMutate.apply(this,arguments);}return onMutate;}(),onError:function onError(_,__,context){if(context===null||context===void 0?void 0:context.previousUsers){queryClient.setQueryData(\"userList\",context.previousUsers);}},onSuccess:function onSuccess(){queryClient.invalidateQueries(\"userList\");notification.success({type:\"success\",message:\"User Deleted\"});}},config),{},{mutationFn:UsersService.delete}));};","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/users/hooks/useDeleteUser.ts"],"names":["queryClient","UsersService","notification","useMutation","useDeleteUser","config","onMutate","deletedUser","cancelQueries","previousUsers","getQueryData","setQueryData","filter","urs","id","onError","_","__","context","onSuccess","invalidateQueries","success","type","message","mutationFn","delete"],"mappings":"ufAAA,OAAyBA,WAAzB,KAA4C,gBAA5C,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,YAAT,KAA6B,MAA7B,CACA,OAASC,WAAT,KAA4B,aAA5B,CAMA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAA2C,oEAAP,EAAO,CAAxCC,MAAwC,MAAxCA,MAAwC,CACvE,MAAOF,CAAAA,WAAW,8BACjBG,QAAQ,kFAAE,iBAAOC,WAAP,0JACHP,CAAAA,WAAW,CAACQ,aAAZ,CAA0B,UAA1B,CADG,QAEHC,aAFG,CAEaT,WAAW,CAACU,YAAZ,CAAgC,UAAhC,CAFb,CAGTV,WAAW,CAACW,YAAZ,CACC,UADD,CAECF,aAFD,SAECA,aAFD,iBAECA,aAAa,CAAEG,MAAf,CAAsB,SAACC,GAAD,CAAS,CAC9B,MAAOA,CAAAA,GAAG,CAACC,EAAJ,GAAWP,WAAlB,CACA,CAFD,CAFD,EAHS,gCAUF,CAAEE,aAAa,CAAbA,aAAF,CAVE,wDAAF,oFADS,CAajBM,OAAO,CAAE,iBAACC,CAAD,CAAIC,EAAJ,CAAQC,OAAR,CAAyB,CACjC,GAAIA,OAAJ,SAAIA,OAAJ,iBAAIA,OAAO,CAAET,aAAb,CAA4B,CAC3BT,WAAW,CAACW,YAAZ,CAAyB,UAAzB,CAAqCO,OAAO,CAACT,aAA7C,EACA,CACD,CAjBgB,CAkBjBU,SAAS,CAAE,oBAAM,CAChBnB,WAAW,CAACoB,iBAAZ,CAA8B,UAA9B,EACAlB,YAAY,CAACmB,OAAb,CAAqB,CACpBC,IAAI,CAAE,SADc,CAEpBC,OAAO,CAAE,cAFW,CAArB,EAIA,CAxBgB,EAyBdlB,MAzBc,MA0BjBmB,UAAU,CAAEvB,YAAY,CAACwB,MA1BR,GAAlB,CA4BA,CA7BM","sourcesContent":["import { MutationConfig, queryClient } from \"@shared/config\"\nimport { UsersService } from \"@shared/services\"\nimport { notification } from \"antd\"\nimport { useMutation } from \"react-query\"\n\ntype UseDeleteUserOptions = {\n\tconfig?: MutationConfig<typeof UsersService.delete>\n}\n\nexport const useDeleteUser = ({ config }: UseDeleteUserOptions = {}) => {\n\treturn useMutation({\n\t\tonMutate: async (deletedUser: any) => {\n\t\t\tawait queryClient.cancelQueries(\"userList\")\n\t\t\tconst previousUsers = queryClient.getQueryData<any[]>(\"userList\")\n\t\t\tqueryClient.setQueryData(\n\t\t\t\t\"userList\",\n\t\t\t\tpreviousUsers?.filter((urs) => {\n\t\t\t\t\treturn urs.id !== deletedUser\n\t\t\t\t})\n\t\t\t)\n\n\t\t\treturn { previousUsers }\n\t\t},\n\t\tonError: (_, __, context: any) => {\n\t\t\tif (context?.previousUsers) {\n\t\t\t\tqueryClient.setQueryData(\"userList\", context.previousUsers)\n\t\t\t}\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tqueryClient.invalidateQueries(\"userList\")\n\t\t\tnotification.success({\n\t\t\t\ttype: \"success\",\n\t\t\t\tmessage: \"User Deleted\",\n\t\t\t})\n\t\t},\n\t\t...config,\n\t\tmutationFn: UsersService.delete,\n\t})\n}\n"]},"metadata":{},"sourceType":"module"}