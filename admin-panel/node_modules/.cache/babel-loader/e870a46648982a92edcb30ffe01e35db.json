{"ast":null,"code":"import _slicedToArray from\"/home/jobayer/Documents/@poshapets/poshapets-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Form,Input,Select}from\"antd\";import{usePermissionTypes}from\"../hooks/usePermissionTypes\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Option=Select.Option;var PermissionCreateForm=function PermissionCreateForm(_ref){var _data$data;var onFinish=_ref.onFinish;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _usePermissionTypes=usePermissionTypes({options:{searchTerm:searchTerm}}),data=_usePermissionTypes.data;function onSearch(val){setSearchTerm(val);}var selectOptions=data===null||data===void 0?void 0:(_data$data=data.data)===null||_data$data===void 0?void 0:_data$data.payload;return/*#__PURE__*/_jsxs(Form,{size:\"middle\",layout:\"vertical\",onFinish:onFinish,children:[/*#__PURE__*/_jsx(Form.Item,{label:\"Title\",name:\"title\",rules:[{required:true,message:\"Please input role title!\"}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Type here\"})}),/*#__PURE__*/_jsx(Form.Item,{label:\"Permission Type\",name:\"permissionType\",rules:[{required:true,message:\"Please select permission type\"}],children:/*#__PURE__*/_jsx(Select,{placeholder:\"select a value\",showSearch:true,optionFilterProp:\"children\",onSearch:onSearch,filterOption:function filterOption(input,option){return option.children.toLowerCase().indexOf(input.toLowerCase())>=0;},children:selectOptions===null||selectOptions===void 0?void 0:selectOptions.map(function(op){return/*#__PURE__*/_jsx(Option,{value:op.id,children:op.title},op.id);})})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Submit\"})})]});};export default PermissionCreateForm;","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/permission/components/PermissionCreateForm.tsx"],"names":["Button","Form","Input","Select","usePermissionTypes","useState","Option","PermissionCreateForm","onFinish","searchTerm","setSearchTerm","options","data","onSearch","val","selectOptions","payload","required","message","input","option","children","toLowerCase","indexOf","map","op","id","title"],"mappings":"yKAAA,OAASA,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,MAA9B,KAA4C,MAA5C,CAGA,OAASC,kBAAT,KAAmC,6BAAnC,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,GAAQC,CAAAA,MAAR,CAAmBH,MAAnB,CAAQG,MAAR,CAQA,GAAMC,CAAAA,oBAAuC,CAAG,QAA1CA,CAAAA,oBAA0C,MAAkB,mBAAfC,CAAAA,QAAe,MAAfA,QAAe,CAE9D,cAAoCH,QAAQ,CAAS,EAAT,CAA5C,wCAAOI,UAAP,eAAmBC,aAAnB,eAEA,wBAAiBN,kBAAkB,CAAC,CACtCO,OAAO,CAAE,CACRF,UAAU,CAAEA,UADJ,CAD6B,CAAD,CAAnC,CAAQG,IAAR,qBAAQA,IAAR,CAMA,QAASC,CAAAA,QAAT,CAAkBC,GAAlB,CAA8B,CAC1BJ,aAAa,CAACI,GAAD,CAAb,CACH,CAQD,GAAMC,CAAAA,aAAa,CAAGH,IAAH,SAAGA,IAAH,6BAAGA,IAAI,CAAEA,IAAT,qCAAG,WAAYI,OAAlC,CAEA,mBACI,MAAC,IAAD,EACI,IAAI,CAAC,QADT,CAEI,MAAM,CAAC,UAFX,CAGI,QAAQ,CAAER,QAHd,wBAII,KAAC,IAAD,CAAM,IAAN,EACI,KAAK,CAAC,OADV,CAEI,IAAI,CAAC,OAFT,CAGI,KAAK,CAAE,CAAC,CAAES,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,0BAA3B,CAAD,CAHX,uBAII,KAAC,KAAD,EAAO,WAAW,CAAC,WAAnB,EAJJ,EAJJ,cAUI,KAAC,IAAD,CAAM,IAAN,EACI,KAAK,CAAC,iBADV,CAEI,IAAI,CAAC,gBAFT,CAGI,KAAK,CAAE,CAAC,CAAED,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,+BAA3B,CAAD,CAHX,uBAKI,KAAC,MAAD,EACI,WAAW,CAAC,gBADhB,CAEI,UAAU,KAFd,CAGI,gBAAgB,CAAC,UAHrB,CAII,QAAQ,CAAEL,QAJd,CAKI,YAAY,CAAE,sBAACM,KAAD,CAAQC,MAAR,QACVA,CAAAA,MAAM,CAACC,QAAP,CAAgBC,WAAhB,GAA8BC,OAA9B,CAAsCJ,KAAK,CAACG,WAAN,EAAtC,GAA8D,CADpD,EALlB,UAUQP,aAVR,SAUQA,aAVR,iBAUQA,aAAa,CAAES,GAAf,CAAmB,SAACC,EAAD,qBAAuB,KAAC,MAAD,EAAoB,KAAK,CAAEA,EAAE,CAACC,EAA9B,UAAmCD,EAAE,CAACE,KAAtC,EAAaF,EAAE,CAACC,EAAhB,CAAvB,EAAnB,CAVR,EALJ,EAVJ,cAiCI,KAAC,IAAD,CAAM,IAAN,wBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,QAAQ,CAAC,QAAhC,oBADJ,EAjCJ,GADJ,CAyCH,CA/DD,CAiEA,cAAenB,CAAAA,oBAAf","sourcesContent":["import { Button, Form, Input, Select } from \"antd\";\n\nimport { IPermissions } from \"@shared/interfaces\";\nimport { usePermissionTypes } from \"../hooks/usePermissionTypes\";\nimport { useState } from \"react\";\n\nconst { Option } = Select;\n\ninterface IFProps {\n    onFinish: (values: IPermissions) => void;\n    isLoading?: boolean\n}\n\n\nconst PermissionCreateForm: React.FC<IFProps> = ({ onFinish }) => {\n\n    const [searchTerm, setSearchTerm] = useState<string>(\"\")\n\n    const { data } = usePermissionTypes({\n\t\toptions: {\n\t\t\tsearchTerm: searchTerm\n\t\t},\n\t})\n\n    function onSearch(val:string) {\n        setSearchTerm(val)\n    }\n\n    interface ISelectOptions { \n            id: string\n            title: string\n        }\n    \n\n    const selectOptions = data?.data?.payload;\n\n    return (\n        <Form\n            size=\"middle\"\n            layout=\"vertical\"\n            onFinish={onFinish}>\n            <Form.Item\n                label=\"Title\"\n                name=\"title\"\n                rules={[{ required: true, message: \"Please input role title!\" }]}>\n                <Input placeholder=\"Type here\" />\n            </Form.Item>\n            <Form.Item\n                label=\"Permission Type\"\n                name=\"permissionType\"\n                rules={[{ required: true, message: \"Please select permission type\" }]}>\n\n                <Select\n                    placeholder=\"select a value\"\n                    showSearch\n                    optionFilterProp=\"children\"\n                    onSearch={onSearch}\n                    filterOption={(input, option:any) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {\n                        selectOptions?.map((op:ISelectOptions) => <Option key={op.id} value={op.id}>{op.title}</Option>)\n                    }\n                    \n                </Select>\n            </Form.Item>\n\n\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default PermissionCreateForm;"]},"metadata":{},"sourceType":"module"}