{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { AuthService } from \"@shared/services/auth.service\";\nimport jwt_decode from \"jwt-decode\";\nimport { notification } from \"antd\";\nimport { storage } from \"@shared/utils\";\nimport { useMutation } from \"react-query\";\nimport { useNavigate } from \"react-router-dom\";\nexport const useAuth = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const loginFn = useMutation(AuthService.login, {\n    onSuccess: val => {\n      var _val$data, _val$data$payload;\n\n      storage.setToken(val === null || val === void 0 ? void 0 : (_val$data = val.data) === null || _val$data === void 0 ? void 0 : (_val$data$payload = _val$data.payload) === null || _val$data$payload === void 0 ? void 0 : _val$data$payload.token);\n      notification.success({\n        message: \"Auth Login Success\"\n      });\n      navigation(\"/app\");\n    }\n  });\n\n  const logoutFn = () => {\n    storage.clearToken();\n    window.location.assign(window.location.origin);\n  };\n\n  const loadUserFn = () => {\n    console.log(\"Use in future\");\n  };\n\n  const isAuthenticated = storage.getToken() ? true : false;\n  return {\n    loginFn,\n    logoutFn,\n    loadUserFn,\n    isAuthenticated\n  };\n};\n\n_s(useAuth, \"TXb7Hv3/lYpo9vFXtRlolfOSSbc=\", false, function () {\n  return [useNavigate, useMutation];\n});\n\nexport const getSession = () => {\n  try {\n    const token = storage.getToken();\n\n    if (token) {\n      return jwt_decode(token);\n    } else {\n      return false;\n    }\n  } catch (error) {\n    return false;\n  }\n};\nexport const getPermissionsSession = () => {\n  try {\n    const token = storage.getToken();\n\n    if (token) {\n      const decodeAccessToken = jwt_decode(token);\n      const decodePermissionToken = jwt_decode(decodeAccessToken.permissions);\n      return decodePermissionToken === null || decodePermissionToken === void 0 ? void 0 : decodePermissionToken.permissions;\n    } else {\n      return false;\n    }\n  } catch (error) {\n    return false;\n  }\n};","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/auth/hooks/useAuth.tsx"],"names":["AuthService","jwt_decode","notification","storage","useMutation","useNavigate","useAuth","navigation","loginFn","login","onSuccess","val","setToken","data","payload","token","success","message","logoutFn","clearToken","window","location","assign","origin","loadUserFn","console","log","isAuthenticated","getToken","getSession","error","getPermissionsSession","decodeAccessToken","decodePermissionToken","permissions"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,+BAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC5B,QAAMC,UAAU,GAAGF,WAAW,EAA9B;AACA,QAAMG,OAAO,GAAGJ,WAAW,CAACJ,WAAW,CAACS,KAAb,EAAoB;AAC9CC,IAAAA,SAAS,EAAGC,GAAD,IAAS;AAAA;;AACnBR,MAAAA,OAAO,CAACS,QAAR,CAAiBD,GAAjB,aAAiBA,GAAjB,oCAAiBA,GAAG,CAAEE,IAAtB,mEAAiB,UAAWC,OAA5B,sDAAiB,kBAAoBC,KAArC;AACAb,MAAAA,YAAY,CAACc,OAAb,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACAV,MAAAA,UAAU,CAAC,MAAD,CAAV;AACA;AAL6C,GAApB,CAA3B;;AAOA,QAAMW,QAAQ,GAAG,MAAM;AACtBf,IAAAA,OAAO,CAACgB,UAAR;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBF,MAAM,CAACC,QAAP,CAAgBE,MAAvC;AACA,GAHD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,GAFD;;AAGA,QAAMC,eAAe,GAAGxB,OAAO,CAACyB,QAAR,KAAqB,IAArB,GAA4B,KAApD;AACA,SAAO;AACNpB,IAAAA,OADM;AAENU,IAAAA,QAFM;AAGNM,IAAAA,UAHM;AAING,IAAAA;AAJM,GAAP;AAMA,CAvBM;;GAAMrB,O;UACOD,W,EACHD,W;;;AAgCjB,OAAO,MAAMyB,UAAU,GAAG,MAA0B;AACnD,MAAI;AACH,UAAMd,KAAuB,GAAGZ,OAAO,CAACyB,QAAR,EAAhC;;AACA,QAAIb,KAAJ,EAAW;AACV,aAAOd,UAAU,CAACc,KAAD,CAAjB;AACA,KAFD,MAEO;AACN,aAAO,KAAP;AACA;AACD,GAPD,CAOE,OAAOe,KAAP,EAAc;AACf,WAAO,KAAP;AACA;AACD,CAXM;AAYP,OAAO,MAAMC,qBAAqB,GAAG,MAAwB;AAC5D,MAAI;AACH,UAAMhB,KAAuB,GAAGZ,OAAO,CAACyB,QAAR,EAAhC;;AACA,QAAIb,KAAJ,EAAW;AACV,YAAMiB,iBAA2B,GAAG/B,UAAU,CAACc,KAAD,CAA9C;AACA,YAAMkB,qBAA0B,GAAGhC,UAAU,CAC5C+B,iBAAiB,CAACE,WAD0B,CAA7C;AAGA,aAAOD,qBAAP,aAAOA,qBAAP,uBAAOA,qBAAqB,CAAEC,WAA9B;AACA,KAND,MAMO;AACN,aAAO,KAAP;AACA;AACD,GAXD,CAWE,OAAOJ,KAAP,EAAc;AACf,WAAO,KAAP;AACA;AACD,CAfM","sourcesContent":["import { AuthService } from \"@shared/services/auth.service\"\nimport jwt_decode from \"jwt-decode\"\nimport { notification } from \"antd\"\nimport { storage } from \"@shared/utils\"\nimport { useMutation } from \"react-query\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport const useAuth = () => {\n\tconst navigation = useNavigate()\n\tconst loginFn = useMutation(AuthService.login, {\n\t\tonSuccess: (val) => {\n\t\t\tstorage.setToken(val?.data?.payload?.token)\n\t\t\tnotification.success({ message: \"Auth Login Success\" })\n\t\t\tnavigation(\"/app\")\n\t\t},\n\t})\n\tconst logoutFn = () => {\n\t\tstorage.clearToken()\n\t\twindow.location.assign(window.location.origin as unknown as string)\n\t}\n\tconst loadUserFn = () => {\n\t\tconsole.log(\"Use in future\")\n\t}\n\tconst isAuthenticated = storage.getToken() ? true : false\n\treturn {\n\t\tloginFn,\n\t\tlogoutFn,\n\t\tloadUserFn,\n\t\tisAuthenticated,\n\t}\n}\n\ninterface ISession {\n\tid: string\n\tphoneNumber: string\n\tname: string\n\tpermissions: string\n\tiat: number\n\texp: number\n}\n\nexport const getSession = (): ISession | boolean => {\n\ttry {\n\t\tconst token: string | boolean = storage.getToken()\n\t\tif (token) {\n\t\t\treturn jwt_decode(token)\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t} catch (error) {\n\t\treturn false\n\t}\n}\nexport const getPermissionsSession = (): string[] | false => {\n\ttry {\n\t\tconst token: string | boolean = storage.getToken()\n\t\tif (token) {\n\t\t\tconst decodeAccessToken: ISession = jwt_decode(token)\n\t\t\tconst decodePermissionToken: any = jwt_decode(\n\t\t\t\tdecodeAccessToken.permissions\n\t\t\t)\n\t\t\treturn decodePermissionToken?.permissions\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t} catch (error) {\n\t\treturn false\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}