{"ast":null,"code":"var _jsxFileName = \"/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/users/routes/UpdateUserPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { PageHeader, Spin } from \"antd\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Authorization } from \"@modules/auth\";\nimport { PathEnum } from \"@shared/enums\";\nimport React from \"react\";\nimport { UpdateForm } from \"../components/elements/UpdateForm\";\nimport { useUpdateUser } from \"../hooks/useUpdateUser\";\nimport { useUser } from \"../hooks/useUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateUserPage = () => {\n  _s();\n\n  var _data$data, _data$data$payload, _data$data2, _data$data3, _data$data4, _data$data5, _data$data6, _data$data7;\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    isLoading\n  } = useUser({\n    id\n  });\n  const updateUserMutation = useUpdateUser({\n    config: {\n      onSuccess: data => {\n        navigate(PathEnum.UserList);\n      }\n    }\n  });\n  console.log(updateUserMutation);\n  return isLoading ? /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(Authorization, {\n    allowedAccess: [\"UserModify\"],\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      onBack: () => navigate(-1),\n      title: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(UpdateForm, {\n      initialValues: {\n        name: data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$payload = _data$data.payload) === null || _data$data$payload === void 0 ? void 0 : _data$data$payload.name,\n        email: data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.payload.email,\n        phoneNumber: data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.payload.phoneNumber,\n        password: data === null || data === void 0 ? void 0 : (_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.payload.password,\n        gender: data === null || data === void 0 ? void 0 : (_data$data5 = data.data) === null || _data$data5 === void 0 ? void 0 : _data$data5.payload.gender,\n        address: data === null || data === void 0 ? void 0 : (_data$data6 = data.data) === null || _data$data6 === void 0 ? void 0 : _data$data6.payload.address,\n        type: data === null || data === void 0 ? void 0 : (_data$data7 = data.data) === null || _data$data7 === void 0 ? void 0 : _data$data7.payload.type\n      },\n      isLoading: updateUserMutation.isLoading,\n      onFinish: values => updateUserMutation.mutateAsync({ ...values,\n        id\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(UpdateUserPage, \"mT9CqXZDgN45sn1zALPNrR9X0h8=\", false, function () {\n  return [useNavigate, useParams, useUser, useUpdateUser];\n});\n\n_c = UpdateUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUserPage\");","map":{"version":3,"sources":["/home/jobayer/Documents/@poshapets/poshapets-admin/src/@modules/users/routes/UpdateUserPage.tsx"],"names":["PageHeader","Spin","useNavigate","useParams","Authorization","PathEnum","React","UpdateForm","useUpdateUser","useUser","UpdateUserPage","navigate","id","data","isLoading","updateUserMutation","config","onSuccess","UserList","console","log","name","payload","email","phoneNumber","password","gender","address","type","values","mutateAsync"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,IAArB,QAAiC,MAAjC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AAEA,SAASC,aAAT,QAA8B,eAA9B;AAEA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAAA;;AACnC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAST,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBL,OAAO,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAnC;AAEA,QAAMG,kBAAkB,GAAGP,aAAa,CAAC;AACxCQ,IAAAA,MAAM,EAAE;AACPC,MAAAA,SAAS,EAAGJ,IAAD,IAAyB;AACnCF,QAAAA,QAAQ,CAACN,QAAQ,CAACa,QAAV,CAAR;AACA;AAHM;AADgC,GAAD,CAAxC;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,kBAAZ;AAEA,SAAOD,SAAS,gBACf,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UADe,gBAGf,QAAC,aAAD;AAAe,IAAA,aAAa,EAAE,CAAC,YAAD,CAA9B;AAAA,4BACC,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,MAAMH,QAAQ,CAAC,CAAC,CAAF,CAAlC;AAAwC,MAAA,KAAK,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,UAAD;AACC,MAAA,aAAa,EAAE;AACdU,QAAAA,IAAI,EAAER,IAAF,aAAEA,IAAF,qCAAEA,IAAI,CAAEA,IAAR,qEAAE,WAAYS,OAAd,uDAAE,mBAAqBD,IADb;AAEdE,QAAAA,KAAK,EAAEV,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBC,KAFb;AAGdC,QAAAA,WAAW,EAAEX,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBE,WAHnB;AAIdC,QAAAA,QAAQ,EAAEZ,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBG,QAJhB;AAKdC,QAAAA,MAAM,EAAEb,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBI,MALd;AAMdC,QAAAA,OAAO,EAAEd,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBK,OANf;AAOdC,QAAAA,IAAI,EAAEf,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEA,IAAR,gDAAE,YAAYS,OAAZ,CAAoBM;AAPZ,OADhB;AAUC,MAAA,SAAS,EAAEb,kBAAkB,CAACD,SAV/B;AAWC,MAAA,QAAQ,EAAGe,MAAD,IAAYd,kBAAkB,CAACe,WAAnB,CAA+B,EAAE,GAAGD,MAAL;AAAajB,QAAAA;AAAb,OAA/B;AAXvB;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UAHD;AAoBA,CAnCM;;GAAMF,c;UACKR,W,EACFC,S,EACaM,O,EAEDD,a;;;KALfE,c","sourcesContent":["import { PageHeader, Spin } from \"antd\"\nimport { useNavigate, useParams } from \"react-router-dom\"\n\nimport { Authorization } from \"@modules/auth\"\nimport { AxiosResponse } from \"axios\"\nimport { PathEnum } from \"@shared/enums\"\nimport React from \"react\"\nimport { UpdateForm } from \"../components/elements/UpdateForm\"\nimport { useUpdateUser } from \"../hooks/useUpdateUser\"\nimport { useUser } from \"../hooks/useUser\"\n\nexport const UpdateUserPage = () => {\n\tconst navigate = useNavigate()\n\tconst { id } = useParams()\n\tconst { data, isLoading } = useUser({ id })\n\n\tconst updateUserMutation = useUpdateUser({\n\t\tconfig: {\n\t\t\tonSuccess: (data: AxiosResponse) => {\n\t\t\t\tnavigate(PathEnum.UserList)\n\t\t\t},\n\t\t},\n\t})\n\n\tconsole.log(updateUserMutation)\n\n\treturn isLoading ? (\n\t\t<Spin />\n\t) : (\n\t\t<Authorization allowedAccess={[\"UserModify\"]}>\n\t\t\t<PageHeader onBack={() => navigate(-1)} title=\"Update User\" />\n\t\t\t<UpdateForm\n\t\t\t\tinitialValues={{\n\t\t\t\t\tname: data?.data?.payload?.name,\n\t\t\t\t\temail: data?.data?.payload.email,\n\t\t\t\t\tphoneNumber: data?.data?.payload.phoneNumber,\n\t\t\t\t\tpassword: data?.data?.payload.password,\n\t\t\t\t\tgender: data?.data?.payload.gender,\n\t\t\t\t\taddress: data?.data?.payload.address,\n\t\t\t\t\ttype: data?.data?.payload.type,\n\t\t\t\t}}\n\t\t\t\tisLoading={updateUserMutation.isLoading}\n\t\t\t\tonFinish={(values) => updateUserMutation.mutateAsync({ ...values, id })}\n\t\t\t/>\n\t\t</Authorization>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}