{"ast":null,"code":"var _jsxFileName = \"/home/jobayer/Documents/@projects-backlogs/Geflex/admin-panel/src/@modules/permission/routes/PermissionTypeCreatePage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Authorization } from \"@modules/auth\";\nimport { PageHeader } from \"antd\";\nimport { Paths } from \"@shared/enums\";\nimport PermissionTypeCreateForm from \"../components/elements/PermissionTypeCreateForm\";\nimport { useCreatePermissionType } from \"../hooks/useCreatePermissionType\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PermissionTypeCreatePage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const CreatePermissionTypeMutation = useCreatePermissionType({\n    config: {\n      onSuccess: data => {\n        navigate(Paths.PermissionsTypeList);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Authorization, {\n    allowedAccess: [\"PermissionTypeCreate\"],\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      onBack: () => null,\n      title: \"Create Permission Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PermissionTypeCreateForm, {\n      isLoading: CreatePermissionTypeMutation.isLoading,\n      onFinish: values => CreatePermissionTypeMutation.mutateAsync(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PermissionTypeCreatePage, \"An/9IN7gKrsTSdQdMD5yMgBk4pc=\", false, function () {\n  return [useNavigate, useCreatePermissionType];\n});\n\n_c = PermissionTypeCreatePage;\nexport default PermissionTypeCreatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PermissionTypeCreatePage\");","map":{"version":3,"sources":["/home/jobayer/Documents/@projects-backlogs/Geflex/admin-panel/src/@modules/permission/routes/PermissionTypeCreatePage.tsx"],"names":["Authorization","PageHeader","Paths","PermissionTypeCreateForm","useCreatePermissionType","useNavigate","PermissionTypeCreatePage","navigate","CreatePermissionTypeMutation","config","onSuccess","data","PermissionsTypeList","isLoading","values","mutateAsync"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,wBAAP,MAAqC,iDAArC;AACA,SAASC,uBAAT,QAAwC,kCAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,wBAAwB,GAAG,MAAM;AAAA;;AACtC,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEA,QAAMG,4BAA4B,GAAGJ,uBAAuB,CAAC;AAC5DK,IAAAA,MAAM,EAAE;AACPC,MAAAA,SAAS,EAAGC,IAAD,IAAyB;AACnCJ,QAAAA,QAAQ,CAACL,KAAK,CAACU,mBAAP,CAAR;AACA;AAHM;AADoD,GAAD,CAA5D;AAQA,sBACC,QAAC,aAAD;AAAe,IAAA,aAAa,EAAE,CAAC,sBAAD,CAA9B;AAAA,4BACC,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,MAAM,IAA1B;AAAgC,MAAA,KAAK,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,wBAAD;AACC,MAAA,SAAS,EAAEJ,4BAA4B,CAACK,SADzC;AAEC,MAAA,QAAQ,EAAGC,MAAD,IAAYN,4BAA4B,CAACO,WAA7B,CAAyCD,MAAzC;AAFvB;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CApBD;;GAAMR,wB;UACYD,W,EAEoBD,uB;;;KAHhCE,wB;AAsBN,eAAeA,wBAAf","sourcesContent":["import { Authorization } from \"@modules/auth\"\nimport { AxiosResponse } from \"axios\"\nimport { PageHeader } from \"antd\"\nimport { Paths } from \"@shared/enums\"\nimport PermissionTypeCreateForm from \"../components/elements/PermissionTypeCreateForm\"\nimport { useCreatePermissionType } from \"../hooks/useCreatePermissionType\"\nimport { useNavigate } from \"react-router-dom\"\n\nconst PermissionTypeCreatePage = () => {\n\tconst navigate = useNavigate()\n\n\tconst CreatePermissionTypeMutation = useCreatePermissionType({\n\t\tconfig: {\n\t\t\tonSuccess: (data: AxiosResponse) => {\n\t\t\t\tnavigate(Paths.PermissionsTypeList)\n\t\t\t},\n\t\t},\n\t})\n\n\treturn (\n\t\t<Authorization allowedAccess={[\"PermissionTypeCreate\"]}>\n\t\t\t<PageHeader onBack={() => null} title=\"Create Permission Type\" />\n\t\t\t<PermissionTypeCreateForm\n\t\t\t\tisLoading={CreatePermissionTypeMutation.isLoading}\n\t\t\t\tonFinish={(values) => CreatePermissionTypeMutation.mutateAsync(values)}\n\t\t\t/>\n\t\t</Authorization>\n\t)\n}\n\nexport default PermissionTypeCreatePage\n"]},"metadata":{},"sourceType":"module"}